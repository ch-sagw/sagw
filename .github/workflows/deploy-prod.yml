# Goal: Create a production deployment from the main branch
# Vercel Env: production
# Runs on: tag creation (tag is created by release please)
# Build: via Vercel CLI

name: Production Deployment
permissions:
  actions: write
  attestations: write
  checks: write
  contents: write
  deployments: write
  security-events: write
  statuses: write
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    tags:
      - '*'
jobs:
  test:
    if: github.head_ref != 'release-please--branches--main'
    env:
      HOME: /root
    runs-on: ubuntu-latest
    container:
      # if the docker image is changed, also change it in deploy-branch.yml and in Dockerfile.testing
      image: mcr.microsoft.com/playwright:v1.52.0-noble

    services:
      mongo:
        image: mongo:8
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: pass
          MONGO_INITDB_DATABASE: sagw-test

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Test FE
        run: npm run test:fe:native
      - name: Test BE
        run: npm run test:be:native
        env:
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          DATABASE_NAME: sagwplaywright
          DATABASE_URI: mongodb://user:pass@mongo:27017/sagwplaywright?authSource=admin
          PAYLOAD_INITIAL_USER_MAIL: ${{ secrets.PAYLOAD_INITIAL_USER_MAIL }}
          PAYLOAD_INITIAL_PASSWORD: ${{ secrets.PAYLOAD_INITIAL_PASSWORD }}
          ZENODO_TOKEN: ${{ secrets.ZENODO_TOKEN }}
          NEXT_PUBLIC_ENABLE_AUTOLOGIN: true
          ENV: playwright
  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
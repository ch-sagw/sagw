/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {
    textBlock: InterfaceTextBlock;
    linksBlock: InterfaceLinksBlock;
    downloadsBlock: InterfaceDownloadsBlock;
    imageBlock: InterfaceImageBlock;
    videoBlock: InterfaceVideoBlock;
    accordionBlock: InterfaceAccordionBlock;
    formBlock: InterfaceFormBlock;
    ctaContactBlock: InterfaceCtaContactBlock;
    ctaLinkBlock: InterfaceCtaLinkBlock;
    homeTeasersBlock: InterfaceHomeTeasersBlock;
    networkTeasersBlock: InterfaceNetworkTeasersBlock;
    genericTeasersBlock: InterfaceGenericTeasersBlock;
    notificationBlock: InterfaceNotificationBlock;
    bibliographicReferenceBlock: InterfaceBibliographicReferenceBlock;
    footnoteBlock: InterfaceFootnotesBlock;
    magazineOverviewBlock: InterfaceMagazineOverviewBlock;
    publicationsOverviewBlock: InterfacePublicationsOverviewBlock;
    eventsOverviewBlock: InterfaceEventsOverviewBlock;
    peopleOverviewBlock: InterfacePeopleOverviewBlock;
    newsOverviewBlock: InterfaceNewsOverviewBlock;
    nationalDictionariesOverviewBlock: InterfaceNationalDictionariesOverviewBlock;
    institutesOverviewBlock: InterfaceInstitutesOverviewBlock;
    projectsOverviewBlock: InterfaceProjectOverviewBlock;
    eventsTeasersBlock: InterfaceEventsTeasersBlock;
    magazineTeasersBlock: InterfaceMagazineTeasersBlock;
    newsTeasersBlock: InterfaceNewsTeasersBlock;
    publicationsTeasersBlock: InterfacePublicationsTeasersBlock;
    projectsTeasersBlock: InterfaceProjectTeasersBlock;
  };
  collections: {
    homePage: HomePage;
    errorPage: ErrorPage;
    dataPrivacyPage: DataPrivacyPage;
    impressumPage: ImpressumPage;
    magazineDetailPage: MagazineDetailPage;
    overviewPage: OverviewPage;
    detailPage: DetailPage;
    eventDetailPage: EventDetailPage;
    newsDetailPage: NewsDetailPage;
    publicationDetailPage: PublicationDetailPage;
    nationalDictionaryDetailPage: NationalDictionaryDetailPage;
    instituteDetailPage: InstituteDetailPage;
    projectDetailPage: ProjectDetailPage;
    images: Image;
    videos: Video;
    svgs: Svg;
    networkCategories: NetworkCategory;
    documents: Document;
    zenodoDocuments: ZenodoDocument;
    projects: Project;
    people: Person;
    teams: Team;
    publicationTopics: PublicationTopic;
    publicationTypes: PublicationType;
    eventCategory: EventCategory;
    tenants: Tenant;
    users: User;
    forms: Form;
    i18nGlobals: I18NGlobal;
    consent: Consent;
    footer: Footer;
    header: Header;
    statusMessage: StatusMessage;
    theme: Theme;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    projects: {
      relatedNewsPages: 'newsDetailPage';
      relatedEventPages: 'eventDetailPage';
      relatedPublicationPages: 'publicationDetailPage';
      relatedProjectPages: 'projectDetailPage';
      relatedDocuments: 'documents';
      relatedZenodoDocuments: 'zenodoDocuments';
    };
    teams: {
      relatedPeople: 'people';
    };
    publicationTopics: {
      relatedPublicationPages: 'publicationDetailPage';
    };
    publicationTypes: {
      relatedPublicationPages: 'publicationDetailPage';
    };
    eventCategory: {
      relatedEventPages: 'eventDetailPage';
    };
  };
  collectionsSelect: {
    homePage: HomePageSelect<false> | HomePageSelect<true>;
    errorPage: ErrorPageSelect<false> | ErrorPageSelect<true>;
    dataPrivacyPage: DataPrivacyPageSelect<false> | DataPrivacyPageSelect<true>;
    impressumPage: ImpressumPageSelect<false> | ImpressumPageSelect<true>;
    magazineDetailPage: MagazineDetailPageSelect<false> | MagazineDetailPageSelect<true>;
    overviewPage: OverviewPageSelect<false> | OverviewPageSelect<true>;
    detailPage: DetailPageSelect<false> | DetailPageSelect<true>;
    eventDetailPage: EventDetailPageSelect<false> | EventDetailPageSelect<true>;
    newsDetailPage: NewsDetailPageSelect<false> | NewsDetailPageSelect<true>;
    publicationDetailPage: PublicationDetailPageSelect<false> | PublicationDetailPageSelect<true>;
    nationalDictionaryDetailPage: NationalDictionaryDetailPageSelect<false> | NationalDictionaryDetailPageSelect<true>;
    instituteDetailPage: InstituteDetailPageSelect<false> | InstituteDetailPageSelect<true>;
    projectDetailPage: ProjectDetailPageSelect<false> | ProjectDetailPageSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    svgs: SvgsSelect<false> | SvgsSelect<true>;
    networkCategories: NetworkCategoriesSelect<false> | NetworkCategoriesSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    zenodoDocuments: ZenodoDocumentsSelect<false> | ZenodoDocumentsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    people: PeopleSelect<false> | PeopleSelect<true>;
    teams: TeamsSelect<false> | TeamsSelect<true>;
    publicationTopics: PublicationTopicsSelect<false> | PublicationTopicsSelect<true>;
    publicationTypes: PublicationTypesSelect<false> | PublicationTypesSelect<true>;
    eventCategory: EventCategorySelect<false> | EventCategorySelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    i18nGlobals: I18NGlobalsSelect<false> | I18NGlobalsSelect<true>;
    consent: ConsentSelect<false> | ConsentSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    statusMessage: StatusMessageSelect<false> | StatusMessageSelect<true>;
    theme: ThemeSelect<false> | ThemeSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: 'de' | 'fr' | 'it' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceTextBlock".
 */
export interface InterfaceTextBlock {
  text: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'textBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceLinksBlock".
 */
export interface InterfaceLinksBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  links?:
    | {
        linkType: 'internal' | 'external' | 'mail';
        linkInternal?: {
          description?: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          linkText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          internalLink: string;
        };
        linkExternal?: {
          description?: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          externalLinkText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          externalLink: string;
        };
        linkMail?: {
          linkText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          'E-Mail': string;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'linksBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceDownloadsBlock".
 */
export interface InterfaceDownloadsBlock {
  subtitle?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  customOrAuto: 'custom' | 'auto';
  downloads?:
    | (
        | {
            relationTo: 'documents';
            value: string | Document;
          }
        | {
            relationTo: 'zenodoDocuments';
            value: string | ZenodoDocument;
          }
      )[]
    | null;
  project?: (string | null) | Project;
  id?: string | null;
  blockName?: string | null;
  blockType: 'downloadsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  tenant?: (string | null) | Tenant;
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  date: string;
  project?: (string | null) | Project;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  name: string;
  /**
   * Used for domain-based tenant handling
   */
  domain?: string | null;
  /**
   * Used for url paths, example: /tenant-slug/page-slug
   */
  slug: string;
  languages?: {
    de?: boolean | null;
    fr?: boolean | null;
    it?: boolean | null;
    en?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * You can assign NewsDetail Pages, Event Detail Pages and Documents to a project. Then you could add a Downloads block to a page an tell it to list all downloads related to a project.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  tenant?: (string | null) | Tenant;
  name: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedNewsPages?: {
    docs?: (string | NewsDetailPage)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  relatedEventPages?: {
    docs?: (string | EventDetailPage)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  relatedPublicationPages?: {
    docs?: (string | PublicationDetailPage)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  relatedProjectPages?: {
    docs?: (string | ProjectDetailPage)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  relatedDocuments?: {
    docs?: (string | Document)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  relatedZenodoDocuments?: {
    docs?: (string | ZenodoDocument)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsDetailPage".
 */
export interface NewsDetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  /**
   * The slug is visible in the url for this page, example: https://sagw.ch/detailPage/here-comes-the-slug . This value is automatically defined by the hero title.
   */
  slug?: string | null;
  overviewPageProps: {
    /**
     * This text will be used as text for the teasers on the overview page.
     */
    teaserText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  hero: InterfaceHeroFieldNewsDetail;
  project?: (string | null) | Project;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroFieldNewsDetail".
 */
export interface InterfaceHeroFieldNewsDetail {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  lead?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  colorMode: 'white' | 'dark' | 'light';
  date: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceImageBlock".
 */
export interface InterfaceImageBlock {
  alignement?: ('left' | 'center' | 'right') | null;
  image: string | Image;
  caption?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  credits: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: string;
  tenant?: (string | null) | Tenant;
  alt: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceVideoBlock".
 */
export interface InterfaceVideoBlock {
  video: string | Video;
  caption?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  credits: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  stillImage: string | Image;
  id?: string | null;
  blockName?: string | null;
  blockType: 'videoBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceAccordionBlock".
 */
export interface InterfaceAccordionBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  titleLevel: '2' | '3' | '4' | '5';
  colorMode: 'white' | 'dark' | 'light';
  accordions: {
    accordionTitle: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    accordionContent: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'accordionBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceFormBlock".
 */
export interface InterfaceFormBlock {
  form?: (string | null) | Form;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * A newsletter form has a fixed set of fields. Custom form can be build with any combination of fields as you like.
   */
  isNewsletterForm?: ('custom' | 'newsletter') | null;
  colorMode: 'white' | 'dark' | 'light';
  title?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  titleLevel: '2' | '3' | '4' | '5';
  subtitle?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  submitButtonLabel: string;
  recipientMail?: string | null;
  mailSubject?: string | null;
  /**
   * If enabled, the data-privacy checkebox will be added to the form. Note: you must define the "Data Privacy Checkbox Text" in "i18n Forms".
   */
  showPrivacyCheckbox?: boolean | null;
  submitSuccess: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    text: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    optionalLink?: {
      includeLink?: boolean | null;
      link?: {
        description?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        linkText: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        internalLink: string;
      };
    };
  };
  submitError: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    text: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    optionalLink?: {
      includeLink?: boolean | null;
      link?: {
        description?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        linkText: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        internalLink: string;
      };
    };
  };
  fields?: (InterfaceCheckboxField | InterfaceEmailField | InterfaceTextField | InterfaceTextareaField)[] | null;
  newsletterFields?: {
    email: {
      label: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      placeholder: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      fieldWidth: 'full' | 'half';
      required?: boolean | null;
      fieldError?: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
    };
    name: {
      label: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      placeholder: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      fieldWidth: 'full' | 'half';
      required?: boolean | null;
      fieldError?: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
    };
    /**
     * The action text to show at the bottom of the notification. e.g.: "Send verifiaction E-Mail again."
     */
    actionText: string;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceCheckboxField".
 */
export interface InterfaceCheckboxField {
  name: string;
  label: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  fieldWidth: 'full' | 'half';
  required?: boolean | null;
  fieldError?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'checkboxBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceEmailField".
 */
export interface InterfaceEmailField {
  label: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  placeholder: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  name: string;
  fieldWidth: 'full' | 'half';
  required?: boolean | null;
  fieldError?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'emailBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceTextField".
 */
export interface InterfaceTextField {
  label: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  placeholder: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  name: string;
  fieldWidth: 'full' | 'half';
  required?: boolean | null;
  fieldError?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textBlockForm';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceTextareaField".
 */
export interface InterfaceTextareaField {
  name: string;
  label: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  placeholder: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  fieldWidth: 'full' | 'half';
  required?: boolean | null;
  fieldError?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textareaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceCtaContactBlock".
 */
export interface InterfaceCtaContactBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  text: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  colorMode: 'white' | 'dark' | 'light';
  contact: string | Person;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ctaContactBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people".
 */
export interface Person {
  id: string;
  tenant?: (string | null) | Tenant;
  team?: (string | Team)[] | null;
  prefix?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  firstname: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  middleName?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  lastname: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  function?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  mail: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  phone?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  name: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image?: (string | null) | Image;
  fullName?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * You can assign People to teams.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teams".
 */
export interface Team {
  id: string;
  tenant?: (string | null) | Tenant;
  name: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPeople?: {
    docs?: (string | Person)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceCtaLinkBlock".
 */
export interface InterfaceCtaLinkBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  text: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  linkType: 'internal' | 'external' | 'mail';
  linkInternal?: {
    description?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    linkText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    internalLink: string;
  };
  linkExternal?: {
    description?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    externalLinkText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    externalLink: string;
  };
  linkMail?: {
    linkText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    'E-Mail': string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'ctaLinkBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHomeTeasersBlock".
 */
export interface InterfaceHomeTeasersBlock {
  homeTeasers?:
    | {
        category: string;
        title: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        text: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        icon: string | Svg;
        link: {
          description?: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          linkText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          internalLink: string;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'homeTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "svgs".
 */
export interface Svg {
  id: string;
  tenant?: (string | null) | Tenant;
  name: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNetworkTeasersBlock".
 */
export interface InterfaceNetworkTeasersBlock {
  filter: {
    allCheckboxText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  items: {
    foundingYearText?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    linkText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    items: {
      title: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      category: string | NetworkCategory;
      foundingYear?: number | null;
      image: string | Image;
      description?: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      externalLink: string;
      id?: string | null;
    }[];
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'networkTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networkCategories".
 */
export interface NetworkCategory {
  id: string;
  tenant?: (string | null) | Tenant;
  name: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceGenericTeasersBlock".
 */
export interface InterfaceGenericTeasersBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  lead?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Align Title & text horizontally or vertically
   */
  alignement?: ('vertical' | 'horizontal') | null;
  teasers: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    text?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    image?:
      | ({
          relationTo: 'images';
          value: string | Image;
        } | null)
      | ({
          relationTo: 'svgs';
          value: string | Svg;
        } | null);
    linkType: 'internal' | 'external' | 'mail';
    linkInternal?: {
      description?: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      linkText: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      internalLink: string;
    };
    linkExternal?: {
      description?: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      externalLinkText: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      externalLink: string;
    };
    linkMail?: {
      linkText: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      'E-Mail': string;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'genericTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNotificationBlock".
 */
export interface InterfaceNotificationBlock {
  /**
   * If disabled, the notification will not be shown.
   */
  show?: boolean | null;
  text: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'notificationBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceBibliographicReferenceBlock".
 */
export interface InterfaceBibliographicReferenceBlock {
  text: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'bibliographicReferenceBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceFootnotesBlock".
 */
export interface InterfaceFootnotesBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  text: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'footnoteBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceMagazineOverviewBlock".
 */
export interface InterfaceMagazineOverviewBlock {
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'magazineOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfacePublicationsOverviewBlock".
 */
export interface InterfacePublicationsOverviewBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  filterTitleAllTopics: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  filterTitleAllPublications: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'publicationsOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceEventsOverviewBlock".
 */
export interface InterfaceEventsOverviewBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventsOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfacePeopleOverviewBlock".
 */
export interface InterfacePeopleOverviewBlock {
  message?: string | null;
  /**
   * Which team members do you want to display in the overview?
   */
  teams: string | Team;
  id?: string | null;
  blockName?: string | null;
  blockType: 'peopleOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNewsOverviewBlock".
 */
export interface InterfaceNewsOverviewBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'newsOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNationalDictionariesOverviewBlock".
 */
export interface InterfaceNationalDictionariesOverviewBlock {
  /**
   * This will be used as "More info" text on the teasers
   */
  moreInfoButtonText: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'nationalDictionariesOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceInstitutesOverviewBlock".
 */
export interface InterfaceInstitutesOverviewBlock {
  /**
   * This will be used as "More info" text on the teasers
   */
  moreInfoButtonText: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'institutesOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceProjectOverviewBlock".
 */
export interface InterfaceProjectOverviewBlock {
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'projectsOverviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceEventsTeasersBlock".
 */
export interface InterfaceEventsTeasersBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Do you want to add a link to the Events overview page?
   */
  link?: ('no' | 'yes') | null;
  linkText?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventsTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceMagazineTeasersBlock".
 */
export interface InterfaceMagazineTeasersBlock {
  linkText: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'magazineTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNewsTeasersBlock".
 */
export interface InterfaceNewsTeasersBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Do you want to add a link to the News overview page?
   */
  link?: ('no' | 'yes') | null;
  linkText?: string | null;
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'newsTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfacePublicationsTeasersBlock".
 */
export interface InterfacePublicationsTeasersBlock {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Do you want to add a link to the Publications overview page?
   */
  link?: ('no' | 'yes') | null;
  linkText?: string | null;
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'publicationsTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceProjectTeasersBlock".
 */
export interface InterfaceProjectTeasersBlock {
  linkText: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'projectsTeasersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventDetailPage".
 */
export interface EventDetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  /**
   * The slug is visible in the url for this page, example: https://sagw.ch/detailPage/here-comes-the-slug . This value is automatically defined by the hero title.
   */
  slug?: string | null;
  eventDetails: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    location?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    language?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    time?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    category?: (string | null) | EventCategory;
    project?: (string | null) | Project;
    date: string;
    multipleDays?: boolean | null;
    dateEnd?: string | null;
  };
  showDetailPage?: ('true' | 'false') | null;
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  link?: {
    description?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    externalLinkText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    externalLink: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventCategory".
 */
export interface EventCategory {
  id: string;
  tenant?: (string | null) | Tenant;
  eventCategory: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedEventPages?: {
    docs?: (string | EventDetailPage)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroField".
 */
export interface InterfaceHeroField {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  lead?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  colorMode: 'white' | 'dark' | 'light';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationDetailPage".
 */
export interface PublicationDetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  /**
   * The slug is visible in the url for this page, example: https://sagw.ch/detailPage/here-comes-the-slug . This value is automatically defined by the hero title.
   */
  slug?: string | null;
  overviewPageProps: {
    /**
     * This image will be used for the teasers on the overview page.
     */
    image: string | Image;
  };
  categorization: {
    topic: string | PublicationTopic;
    type: string | PublicationType;
    project?: (string | null) | Project;
  };
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTopics".
 */
export interface PublicationTopic {
  id: string;
  tenant?: (string | null) | Tenant;
  publicationTopic: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPublicationPages?: {
    docs?: (string | PublicationDetailPage)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTypes".
 */
export interface PublicationType {
  id: string;
  tenant?: (string | null) | Tenant;
  publicationType: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPublicationPages?: {
    docs?: (string | PublicationDetailPage)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projectDetailPage".
 */
export interface ProjectDetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  project: string | Project;
  overviewPageProps: {
    /**
     * This text will be used for the teasers on the overview page.
     */
    teaserText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zenodoDocuments".
 */
export interface ZenodoDocument {
  id: string;
  tenant?: (string | null) | Tenant;
  zenodoId: string;
  title: string;
  publicationDate: string;
  files: {
    link?: string | null;
    format?: string | null;
    size?: number | null;
    id?: string | null;
  }[];
  project?: (string | null) | Project;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage".
 */
export interface HomePage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  hero: InterfaceHeroFieldHome;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroFieldHome".
 */
export interface InterfaceHeroFieldHome {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  lead?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  animated?: boolean | null;
  sideTitle: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  optionalLink?: {
    includeLink?: boolean | null;
    link?: {
      description?: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      linkText: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      internalLink: string;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage".
 */
export interface ErrorPage {
  id: string;
  tenant?: (string | null) | Tenant;
  homeButtonText: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  notFound: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    description: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dataPrivacyPage".
 */
export interface DataPrivacyPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "impressumPage".
 */
export interface ImpressumPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineDetailPage".
 */
export interface MagazineDetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  /**
   * The slug is visible in the url for this page, example: https://sagw.ch/detailPage/here-comes-the-slug . This value is automatically defined by the hero title.
   */
  slug?: string | null;
  overviewPageProps: {
    /**
     * This text will be used as text for the teasers on the overview page.
     */
    teaserText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  hero: InterfaceHeroFieldMagazineDetail;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroFieldMagazineDetail".
 */
export interface InterfaceHeroFieldMagazineDetail {
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  lead?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  colorMode: 'white' | 'dark' | 'light';
  author: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  date: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "overviewPage".
 */
export interface OverviewPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  /**
   * The slug is visible in the url for this page, example: https://sagw.ch/detailPage/here-comes-the-slug . This value is automatically defined by the hero title.
   */
  slug?: string | null;
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "detailPage".
 */
export interface DetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  /**
   * The slug is visible in the url for this page, example: https://sagw.ch/detailPage/here-comes-the-slug . This value is automatically defined by the hero title.
   */
  slug?: string | null;
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nationalDictionaryDetailPage".
 */
export interface NationalDictionaryDetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  overviewPageProps: {
    /**
     * This image will be used for the teasers on the overview page.
     */
    image?: (string | null) | Image;
    /**
     * This text will be used for the teasers on the overview page.
     */
    teaserText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instituteDetailPage".
 */
export interface InstituteDetailPage {
  id: string;
  tenant?: (string | null) | Tenant;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  overviewPageProps: {
    /**
     * This image will be used for the teasers on the overview page.
     */
    image: string | Image;
    /**
     * This text will be used for the teasers on the overview page.
     */
    teaserText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  hero: InterfaceHeroField;
  content?:
    | (
        | InterfaceTextBlock
        | InterfaceLinksBlock
        | InterfaceDownloadsBlock
        | InterfaceImageBlock
        | InterfaceVideoBlock
        | InterfaceAccordionBlock
        | InterfaceFormBlock
        | InterfaceCtaContactBlock
        | InterfaceCtaLinkBlock
        | InterfaceHomeTeasersBlock
        | InterfaceNetworkTeasersBlock
        | InterfaceGenericTeasersBlock
        | InterfaceNotificationBlock
        | InterfaceBibliographicReferenceBlock
        | InterfaceFootnotesBlock
        | InterfaceMagazineOverviewBlock
        | InterfacePublicationsOverviewBlock
        | InterfaceEventsOverviewBlock
        | InterfacePeopleOverviewBlock
        | InterfaceNewsOverviewBlock
        | InterfaceNationalDictionariesOverviewBlock
        | InterfaceInstitutesOverviewBlock
        | InterfaceProjectOverviewBlock
        | InterfaceEventsTeasersBlock
        | InterfaceMagazineTeasersBlock
        | InterfaceNewsTeasersBlock
        | InterfacePublicationsTeasersBlock
        | InterfaceProjectTeasersBlock
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  password?: string | null;
  roles?: ('super-admin' | 'global-user')[] | null;
  username?: string | null;
  tenants?:
    | {
        tenant: string | Tenant;
        roles: ('tenant-admin' | 'editor')[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "i18nGlobals".
 */
export interface I18NGlobal {
  id: string;
  tenant?: (string | null) | Tenant;
  generic: {
    /**
     * If you add a Download-Block, this will be used as a title
     */
    downloadTitle: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    /**
     * If you add a CTA-Contact-Block, this will be used as the button text
     */
    writeEmailButtonText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    /**
     * On magazine detail pages, we use this to show the "Copy Text" button
     */
    exportArticleButtonText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  bibliographicReference: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    copyButtonText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  forms: {
    /**
     * You may show this text in a checkbox on forms.
     */
    dataPrivacyCheckbox: {
      dataPrivacyCheckboxText: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      errorMessage: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "consent".
 */
export interface Consent {
  id: string;
  tenant?: (string | null) | Tenant;
  adminTitle?: string | null;
  banner: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    text: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonAcceptAll: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonCustomizeSelection: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonDeclineAll: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  overlay: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    text: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonAcceptAll: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonAcceptSelection: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    necessaryCookies: {
      title: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      text: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabel: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
    };
    analyticsPerformance: {
      title: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      text: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabelOff: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabelOn: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleDefault?: ('on' | 'off') | null;
    };
    externalContent: {
      title: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      text: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabelOff: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabelOn: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleDefault?: ('on' | 'off') | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  tenant?: (string | null) | Tenant;
  adminTitle?: string | null;
  'Data privacy link text': {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  'Impressum link text': {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  copyright: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  contact: {
    title: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    address1: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    address2?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    poBox?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    countryCode: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    zipCode: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    city: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    phone?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    mail?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  socialLinks?:
    | {
        description?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        externalLinkText: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        externalLink: string;
        icon?: ('linkedIn' | 'instagram' | 'facebook' | 'twitter') | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  tenant?: (string | null) | Tenant;
  adminTitle?: string | null;
  navigation: InterfaceHeaderNavigation;
  languageNavigation: InterfaceHeaderLanguageNavigation;
  metanavigation?: InterfaceHeaderMetaNavigation;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeaderNavigation".
 */
export interface InterfaceHeaderNavigation {
  navItems: {
    /**
     * If the user hovers over this menu item in the navigation, this is shown as a description in the Header
     */
    description?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    navItemText: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    navItemLink?: string | null;
    subNavItems?:
      | {
          navItemText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          navItemLink?: string | null;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeaderLanguageNavigation".
 */
export interface InterfaceHeaderLanguageNavigation {
  /**
   * If the user hovers over the language selection, this is shown as a title in the Header
   */
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * If the user hovers over the language selection, this is shown as a description in the Header
   */
  description: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeaderMetaNavigation".
 */
export interface InterfaceHeaderMetaNavigation {
  metaLinks?:
    | {
        linkType: 'internal' | 'external' | 'mail';
        linkInternal?: {
          description?: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          linkText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          internalLink: string;
        };
        linkExternal?: {
          description?: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          externalLinkText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          externalLink: string;
        };
        linkMail?: {
          linkText: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          'E-Mail': string;
        };
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statusMessage".
 */
export interface StatusMessage {
  id: string;
  tenant?: (string | null) | Tenant;
  adminTitle?: string | null;
  show: {
    /**
     * Show, hide or define date range when to show the message.
     */
    display: 'show' | 'hide' | 'date';
    from?: string | null;
    to?: string | null;
  };
  title: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  message: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  optionalLink?: {
    includeLink?: boolean | null;
    link?: {
      description?: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      linkText: {
        root: {
          type: string;
          children: {
            type: any;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      internalLink: string;
    };
  };
  /**
   * Should the message be displayed on home only or everywhere?
   */
  showOnHomeOnly?: boolean | null;
  type: 'warn' | 'error' | 'success';
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme".
 */
export interface Theme {
  id: string;
  tenant?: (string | null) | Tenant;
  adminTitle?: string | null;
  themeSelector: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'homePage';
        value: string | HomePage;
      } | null)
    | ({
        relationTo: 'errorPage';
        value: string | ErrorPage;
      } | null)
    | ({
        relationTo: 'dataPrivacyPage';
        value: string | DataPrivacyPage;
      } | null)
    | ({
        relationTo: 'impressumPage';
        value: string | ImpressumPage;
      } | null)
    | ({
        relationTo: 'magazineDetailPage';
        value: string | MagazineDetailPage;
      } | null)
    | ({
        relationTo: 'overviewPage';
        value: string | OverviewPage;
      } | null)
    | ({
        relationTo: 'detailPage';
        value: string | DetailPage;
      } | null)
    | ({
        relationTo: 'eventDetailPage';
        value: string | EventDetailPage;
      } | null)
    | ({
        relationTo: 'newsDetailPage';
        value: string | NewsDetailPage;
      } | null)
    | ({
        relationTo: 'publicationDetailPage';
        value: string | PublicationDetailPage;
      } | null)
    | ({
        relationTo: 'nationalDictionaryDetailPage';
        value: string | NationalDictionaryDetailPage;
      } | null)
    | ({
        relationTo: 'instituteDetailPage';
        value: string | InstituteDetailPage;
      } | null)
    | ({
        relationTo: 'projectDetailPage';
        value: string | ProjectDetailPage;
      } | null)
    | ({
        relationTo: 'images';
        value: string | Image;
      } | null)
    | ({
        relationTo: 'videos';
        value: string | Video;
      } | null)
    | ({
        relationTo: 'svgs';
        value: string | Svg;
      } | null)
    | ({
        relationTo: 'networkCategories';
        value: string | NetworkCategory;
      } | null)
    | ({
        relationTo: 'documents';
        value: string | Document;
      } | null)
    | ({
        relationTo: 'zenodoDocuments';
        value: string | ZenodoDocument;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null)
    | ({
        relationTo: 'people';
        value: string | Person;
      } | null)
    | ({
        relationTo: 'teams';
        value: string | Team;
      } | null)
    | ({
        relationTo: 'publicationTopics';
        value: string | PublicationTopic;
      } | null)
    | ({
        relationTo: 'publicationTypes';
        value: string | PublicationType;
      } | null)
    | ({
        relationTo: 'eventCategory';
        value: string | EventCategory;
      } | null)
    | ({
        relationTo: 'tenants';
        value: string | Tenant;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'i18nGlobals';
        value: string | I18NGlobal;
      } | null)
    | ({
        relationTo: 'consent';
        value: string | Consent;
      } | null)
    | ({
        relationTo: 'footer';
        value: string | Footer;
      } | null)
    | ({
        relationTo: 'header';
        value: string | Header;
      } | null)
    | ({
        relationTo: 'statusMessage';
        value: string | StatusMessage;
      } | null)
    | ({
        relationTo: 'theme';
        value: string | Theme;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  hero?: T | InterfaceHeroFieldHomeSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroFieldHome_select".
 */
export interface InterfaceHeroFieldHomeSelect<T extends boolean = true> {
  title?: T;
  lead?: T;
  animated?: T;
  sideTitle?: T;
  optionalLink?:
    | T
    | {
        includeLink?: T;
        link?:
          | T
          | {
              description?: T;
              linkText?: T;
              internalLink?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceTextBlock_select".
 */
export interface InterfaceTextBlockSelect<T extends boolean = true> {
  text?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceLinksBlock_select".
 */
export interface InterfaceLinksBlockSelect<T extends boolean = true> {
  title?: T;
  links?:
    | T
    | {
        linkType?: T;
        linkInternal?:
          | T
          | {
              description?: T;
              linkText?: T;
              internalLink?: T;
            };
        linkExternal?:
          | T
          | {
              description?: T;
              externalLinkText?: T;
              externalLink?: T;
            };
        linkMail?:
          | T
          | {
              linkText?: T;
              'E-Mail'?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceDownloadsBlock_select".
 */
export interface InterfaceDownloadsBlockSelect<T extends boolean = true> {
  subtitle?: T;
  customOrAuto?: T;
  downloads?: T;
  project?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceImageBlock_select".
 */
export interface InterfaceImageBlockSelect<T extends boolean = true> {
  alignement?: T;
  image?: T;
  caption?: T;
  credits?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceVideoBlock_select".
 */
export interface InterfaceVideoBlockSelect<T extends boolean = true> {
  video?: T;
  caption?: T;
  credits?: T;
  stillImage?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceAccordionBlock_select".
 */
export interface InterfaceAccordionBlockSelect<T extends boolean = true> {
  title?: T;
  titleLevel?: T;
  colorMode?: T;
  accordions?:
    | T
    | {
        accordionTitle?: T;
        accordionContent?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceFormBlock_select".
 */
export interface InterfaceFormBlockSelect<T extends boolean = true> {
  form?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceCtaContactBlock_select".
 */
export interface InterfaceCtaContactBlockSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  colorMode?: T;
  contact?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceCtaLinkBlock_select".
 */
export interface InterfaceCtaLinkBlockSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  linkType?: T;
  linkInternal?:
    | T
    | {
        description?: T;
        linkText?: T;
        internalLink?: T;
      };
  linkExternal?:
    | T
    | {
        description?: T;
        externalLinkText?: T;
        externalLink?: T;
      };
  linkMail?:
    | T
    | {
        linkText?: T;
        'E-Mail'?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHomeTeasersBlock_select".
 */
export interface InterfaceHomeTeasersBlockSelect<T extends boolean = true> {
  homeTeasers?:
    | T
    | {
        category?: T;
        title?: T;
        text?: T;
        icon?: T;
        link?:
          | T
          | {
              description?: T;
              linkText?: T;
              internalLink?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNetworkTeasersBlock_select".
 */
export interface InterfaceNetworkTeasersBlockSelect<T extends boolean = true> {
  filter?:
    | T
    | {
        allCheckboxText?: T;
        title?: T;
      };
  items?:
    | T
    | {
        foundingYearText?: T;
        linkText?: T;
        items?:
          | T
          | {
              title?: T;
              category?: T;
              foundingYear?: T;
              image?: T;
              description?: T;
              externalLink?: T;
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceGenericTeasersBlock_select".
 */
export interface InterfaceGenericTeasersBlockSelect<T extends boolean = true> {
  title?: T;
  lead?: T;
  alignement?: T;
  teasers?:
    | T
    | {
        title?: T;
        text?: T;
        image?: T;
        linkType?: T;
        linkInternal?:
          | T
          | {
              description?: T;
              linkText?: T;
              internalLink?: T;
            };
        linkExternal?:
          | T
          | {
              description?: T;
              externalLinkText?: T;
              externalLink?: T;
            };
        linkMail?:
          | T
          | {
              linkText?: T;
              'E-Mail'?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNotificationBlock_select".
 */
export interface InterfaceNotificationBlockSelect<T extends boolean = true> {
  show?: T;
  text?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceBibliographicReferenceBlock_select".
 */
export interface InterfaceBibliographicReferenceBlockSelect<T extends boolean = true> {
  text?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceFootnotesBlock_select".
 */
export interface InterfaceFootnotesBlockSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceMagazineOverviewBlock_select".
 */
export interface InterfaceMagazineOverviewBlockSelect<T extends boolean = true> {
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfacePublicationsOverviewBlock_select".
 */
export interface InterfacePublicationsOverviewBlockSelect<T extends boolean = true> {
  title?: T;
  filterTitleAllTopics?: T;
  filterTitleAllPublications?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceEventsOverviewBlock_select".
 */
export interface InterfaceEventsOverviewBlockSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfacePeopleOverviewBlock_select".
 */
export interface InterfacePeopleOverviewBlockSelect<T extends boolean = true> {
  message?: T;
  teams?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNewsOverviewBlock_select".
 */
export interface InterfaceNewsOverviewBlockSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNationalDictionariesOverviewBlock_select".
 */
export interface InterfaceNationalDictionariesOverviewBlockSelect<T extends boolean = true> {
  moreInfoButtonText?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceInstitutesOverviewBlock_select".
 */
export interface InterfaceInstitutesOverviewBlockSelect<T extends boolean = true> {
  moreInfoButtonText?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceProjectOverviewBlock_select".
 */
export interface InterfaceProjectOverviewBlockSelect<T extends boolean = true> {
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceEventsTeasersBlock_select".
 */
export interface InterfaceEventsTeasersBlockSelect<T extends boolean = true> {
  title?: T;
  link?: T;
  linkText?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceMagazineTeasersBlock_select".
 */
export interface InterfaceMagazineTeasersBlockSelect<T extends boolean = true> {
  linkText?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceNewsTeasersBlock_select".
 */
export interface InterfaceNewsTeasersBlockSelect<T extends boolean = true> {
  title?: T;
  link?: T;
  linkText?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfacePublicationsTeasersBlock_select".
 */
export interface InterfacePublicationsTeasersBlockSelect<T extends boolean = true> {
  title?: T;
  link?: T;
  linkText?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceProjectTeasersBlock_select".
 */
export interface InterfaceProjectTeasersBlockSelect<T extends boolean = true> {
  linkText?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage_select".
 */
export interface ErrorPageSelect<T extends boolean = true> {
  tenant?: T;
  homeButtonText?: T;
  notFound?:
    | T
    | {
        title?: T;
        description?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dataPrivacyPage_select".
 */
export interface DataPrivacyPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroField_select".
 */
export interface InterfaceHeroFieldSelect<T extends boolean = true> {
  title?: T;
  lead?: T;
  colorMode?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "impressumPage_select".
 */
export interface ImpressumPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineDetailPage_select".
 */
export interface MagazineDetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  slug?: T;
  overviewPageProps?:
    | T
    | {
        teaserText?: T;
      };
  hero?: T | InterfaceHeroFieldMagazineDetailSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroFieldMagazineDetail_select".
 */
export interface InterfaceHeroFieldMagazineDetailSelect<T extends boolean = true> {
  title?: T;
  lead?: T;
  colorMode?: T;
  author?: T;
  date?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "overviewPage_select".
 */
export interface OverviewPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  slug?: T;
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "detailPage_select".
 */
export interface DetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  slug?: T;
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventDetailPage_select".
 */
export interface EventDetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  slug?: T;
  eventDetails?:
    | T
    | {
        title?: T;
        location?: T;
        language?: T;
        time?: T;
        category?: T;
        project?: T;
        date?: T;
        multipleDays?: T;
        dateEnd?: T;
      };
  showDetailPage?: T;
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  link?:
    | T
    | {
        description?: T;
        externalLinkText?: T;
        externalLink?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsDetailPage_select".
 */
export interface NewsDetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  slug?: T;
  overviewPageProps?:
    | T
    | {
        teaserText?: T;
      };
  hero?: T | InterfaceHeroFieldNewsDetailSelect<T>;
  project?: T;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeroFieldNewsDetail_select".
 */
export interface InterfaceHeroFieldNewsDetailSelect<T extends boolean = true> {
  title?: T;
  lead?: T;
  colorMode?: T;
  date?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationDetailPage_select".
 */
export interface PublicationDetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  slug?: T;
  overviewPageProps?:
    | T
    | {
        image?: T;
      };
  categorization?:
    | T
    | {
        topic?: T;
        type?: T;
        project?: T;
      };
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nationalDictionaryDetailPage_select".
 */
export interface NationalDictionaryDetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  overviewPageProps?:
    | T
    | {
        image?: T;
        teaserText?: T;
      };
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instituteDetailPage_select".
 */
export interface InstituteDetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  overviewPageProps?:
    | T
    | {
        image?: T;
        teaserText?: T;
      };
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projectDetailPage_select".
 */
export interface ProjectDetailPageSelect<T extends boolean = true> {
  tenant?: T;
  isLinkable?: T;
  adminTitle?: T;
  project?: T;
  overviewPageProps?:
    | T
    | {
        teaserText?: T;
      };
  hero?: T | InterfaceHeroFieldSelect<T>;
  content?:
    | T
    | {
        textBlock?: T | InterfaceTextBlockSelect<T>;
        linksBlock?: T | InterfaceLinksBlockSelect<T>;
        downloadsBlock?: T | InterfaceDownloadsBlockSelect<T>;
        imageBlock?: T | InterfaceImageBlockSelect<T>;
        videoBlock?: T | InterfaceVideoBlockSelect<T>;
        accordionBlock?: T | InterfaceAccordionBlockSelect<T>;
        formBlock?: T | InterfaceFormBlockSelect<T>;
        ctaContactBlock?: T | InterfaceCtaContactBlockSelect<T>;
        ctaLinkBlock?: T | InterfaceCtaLinkBlockSelect<T>;
        homeTeasersBlock?: T | InterfaceHomeTeasersBlockSelect<T>;
        networkTeasersBlock?: T | InterfaceNetworkTeasersBlockSelect<T>;
        genericTeasersBlock?: T | InterfaceGenericTeasersBlockSelect<T>;
        notificationBlock?: T | InterfaceNotificationBlockSelect<T>;
        bibliographicReferenceBlock?: T | InterfaceBibliographicReferenceBlockSelect<T>;
        footnoteBlock?: T | InterfaceFootnotesBlockSelect<T>;
        magazineOverviewBlock?: T | InterfaceMagazineOverviewBlockSelect<T>;
        publicationsOverviewBlock?: T | InterfacePublicationsOverviewBlockSelect<T>;
        eventsOverviewBlock?: T | InterfaceEventsOverviewBlockSelect<T>;
        peopleOverviewBlock?: T | InterfacePeopleOverviewBlockSelect<T>;
        newsOverviewBlock?: T | InterfaceNewsOverviewBlockSelect<T>;
        nationalDictionariesOverviewBlock?: T | InterfaceNationalDictionariesOverviewBlockSelect<T>;
        institutesOverviewBlock?: T | InterfaceInstitutesOverviewBlockSelect<T>;
        projectsOverviewBlock?: T | InterfaceProjectOverviewBlockSelect<T>;
        eventsTeasersBlock?: T | InterfaceEventsTeasersBlockSelect<T>;
        magazineTeasersBlock?: T | InterfaceMagazineTeasersBlockSelect<T>;
        newsTeasersBlock?: T | InterfaceNewsTeasersBlockSelect<T>;
        publicationsTeasersBlock?: T | InterfacePublicationsTeasersBlockSelect<T>;
        projectsTeasersBlock?: T | InterfaceProjectTeasersBlockSelect<T>;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "svgs_select".
 */
export interface SvgsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networkCategories_select".
 */
export interface NetworkCategoriesSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  date?: T;
  project?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zenodoDocuments_select".
 */
export interface ZenodoDocumentsSelect<T extends boolean = true> {
  tenant?: T;
  zenodoId?: T;
  title?: T;
  publicationDate?: T;
  files?:
    | T
    | {
        link?: T;
        format?: T;
        size?: T;
        id?: T;
      };
  project?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  relatedNewsPages?: T;
  relatedEventPages?: T;
  relatedPublicationPages?: T;
  relatedProjectPages?: T;
  relatedDocuments?: T;
  relatedZenodoDocuments?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people_select".
 */
export interface PeopleSelect<T extends boolean = true> {
  tenant?: T;
  team?: T;
  prefix?: T;
  firstname?: T;
  middleName?: T;
  lastname?: T;
  function?: T;
  mail?: T;
  phone?: T;
  name?: T;
  image?: T;
  fullName?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teams_select".
 */
export interface TeamsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  relatedPeople?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTopics_select".
 */
export interface PublicationTopicsSelect<T extends boolean = true> {
  tenant?: T;
  publicationTopic?: T;
  relatedPublicationPages?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTypes_select".
 */
export interface PublicationTypesSelect<T extends boolean = true> {
  tenant?: T;
  publicationType?: T;
  relatedPublicationPages?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventCategory_select".
 */
export interface EventCategorySelect<T extends boolean = true> {
  tenant?: T;
  eventCategory?: T;
  relatedEventPages?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  domain?: T;
  slug?: T;
  languages?:
    | T
    | {
        de?: T;
        fr?: T;
        it?: T;
        en?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  password?: T;
  roles?: T;
  username?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        roles?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  tenant?: T;
  isNewsletterForm?: T;
  colorMode?: T;
  title?: T;
  titleLevel?: T;
  subtitle?: T;
  submitButtonLabel?: T;
  recipientMail?: T;
  mailSubject?: T;
  showPrivacyCheckbox?: T;
  submitSuccess?:
    | T
    | {
        title?: T;
        text?: T;
        optionalLink?:
          | T
          | {
              includeLink?: T;
              link?:
                | T
                | {
                    description?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
            };
      };
  submitError?:
    | T
    | {
        title?: T;
        text?: T;
        optionalLink?:
          | T
          | {
              includeLink?: T;
              link?:
                | T
                | {
                    description?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
            };
      };
  fields?:
    | T
    | {
        checkboxBlock?: T | InterfaceCheckboxFieldSelect<T>;
        emailBlock?: T | InterfaceEmailFieldSelect<T>;
        textBlockForm?: T | InterfaceTextFieldSelect<T>;
        textareaBlock?: T | InterfaceTextareaFieldSelect<T>;
      };
  newsletterFields?:
    | T
    | {
        email?:
          | T
          | {
              label?: T;
              placeholder?: T;
              fieldWidth?: T;
              required?: T;
              fieldError?: T;
            };
        name?:
          | T
          | {
              label?: T;
              placeholder?: T;
              fieldWidth?: T;
              required?: T;
              fieldError?: T;
            };
        actionText?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceCheckboxField_select".
 */
export interface InterfaceCheckboxFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  fieldWidth?: T;
  required?: T;
  fieldError?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceEmailField_select".
 */
export interface InterfaceEmailFieldSelect<T extends boolean = true> {
  label?: T;
  placeholder?: T;
  name?: T;
  fieldWidth?: T;
  required?: T;
  fieldError?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceTextField_select".
 */
export interface InterfaceTextFieldSelect<T extends boolean = true> {
  label?: T;
  placeholder?: T;
  name?: T;
  fieldWidth?: T;
  required?: T;
  fieldError?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceTextareaField_select".
 */
export interface InterfaceTextareaFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  placeholder?: T;
  fieldWidth?: T;
  required?: T;
  fieldError?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "i18nGlobals_select".
 */
export interface I18NGlobalsSelect<T extends boolean = true> {
  tenant?: T;
  generic?:
    | T
    | {
        downloadTitle?: T;
        writeEmailButtonText?: T;
        exportArticleButtonText?: T;
      };
  bibliographicReference?:
    | T
    | {
        title?: T;
        copyButtonText?: T;
      };
  forms?:
    | T
    | {
        dataPrivacyCheckbox?:
          | T
          | {
              dataPrivacyCheckboxText?: T;
              errorMessage?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "consent_select".
 */
export interface ConsentSelect<T extends boolean = true> {
  tenant?: T;
  adminTitle?: T;
  banner?:
    | T
    | {
        title?: T;
        text?: T;
        buttonAcceptAll?: T;
        buttonCustomizeSelection?: T;
        buttonDeclineAll?: T;
      };
  overlay?:
    | T
    | {
        title?: T;
        text?: T;
        buttonAcceptAll?: T;
        buttonAcceptSelection?: T;
        necessaryCookies?:
          | T
          | {
              title?: T;
              text?: T;
              toggleLabel?: T;
            };
        analyticsPerformance?:
          | T
          | {
              title?: T;
              text?: T;
              toggleLabelOff?: T;
              toggleLabelOn?: T;
              toggleDefault?: T;
            };
        externalContent?:
          | T
          | {
              title?: T;
              text?: T;
              toggleLabelOff?: T;
              toggleLabelOn?: T;
              toggleDefault?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  tenant?: T;
  adminTitle?: T;
  'Data privacy link text'?: T;
  'Impressum link text'?: T;
  copyright?: T;
  contact?:
    | T
    | {
        title?: T;
        address1?: T;
        address2?: T;
        poBox?: T;
        countryCode?: T;
        zipCode?: T;
        city?: T;
        phone?: T;
        mail?: T;
      };
  socialLinks?:
    | T
    | {
        description?: T;
        externalLinkText?: T;
        externalLink?: T;
        icon?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  tenant?: T;
  adminTitle?: T;
  navigation?: T | InterfaceHeaderNavigationSelect<T>;
  languageNavigation?: T | InterfaceHeaderLanguageNavigationSelect<T>;
  metanavigation?: T | InterfaceHeaderMetaNavigationSelect<T>;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeaderNavigation_select".
 */
export interface InterfaceHeaderNavigationSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        description?: T;
        navItemText?: T;
        navItemLink?: T;
        subNavItems?:
          | T
          | {
              navItemText?: T;
              navItemLink?: T;
              id?: T;
            };
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeaderLanguageNavigation_select".
 */
export interface InterfaceHeaderLanguageNavigationSelect<T extends boolean = true> {
  title?: T;
  description?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InterfaceHeaderMetaNavigation_select".
 */
export interface InterfaceHeaderMetaNavigationSelect<T extends boolean = true> {
  metaLinks?:
    | T
    | {
        linkType?: T;
        linkInternal?:
          | T
          | {
              description?: T;
              linkText?: T;
              internalLink?: T;
            };
        linkExternal?:
          | T
          | {
              description?: T;
              externalLinkText?: T;
              externalLink?: T;
            };
        linkMail?:
          | T
          | {
              linkText?: T;
              'E-Mail'?: T;
            };
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statusMessage_select".
 */
export interface StatusMessageSelect<T extends boolean = true> {
  tenant?: T;
  adminTitle?: T;
  show?:
    | T
    | {
        display?: T;
        from?: T;
        to?: T;
      };
  title?: T;
  message?: T;
  optionalLink?:
    | T
    | {
        includeLink?: T;
        link?:
          | T
          | {
              description?: T;
              linkText?: T;
              internalLink?: T;
            };
      };
  showOnHomeOnly?: T;
  type?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme_select".
 */
export interface ThemeSelect<T extends boolean = true> {
  tenant?: T;
  adminTitle?: T;
  themeSelector?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
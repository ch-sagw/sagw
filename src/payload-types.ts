/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    homePage: HomePage;
    errorPage: ErrorPage;
    overviewPage: OverviewPage;
    detailPage: DetailPage;
    magazineDetailPage: MagazineDetailPage;
    eventDetailPage: EventDetailPage;
    newsDetailPage: NewsDetailPage;
    publicationDetailPage: PublicationDetailPage;
    images: Image;
    videos: Video;
    svgs: Svg;
    networkCategories: NetworkCategory;
    documents: Document;
    zenodoDocuments: ZenodoDocument;
    projects: Project;
    people: Person;
    publicationTopics: PublicationTopic;
    publicationTypes: PublicationType;
    eventCategory: EventCategory;
    departments: Department;
    users: User;
    i18nForms: I18NForm;
    i18nGlobals: I18NGlobal;
    consent: Consent;
    footer: Footer;
    header: Header;
    statusMessage: StatusMessage;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    homePage: HomePageSelect<false> | HomePageSelect<true>;
    errorPage: ErrorPageSelect<false> | ErrorPageSelect<true>;
    overviewPage: OverviewPageSelect<false> | OverviewPageSelect<true>;
    detailPage: DetailPageSelect<false> | DetailPageSelect<true>;
    magazineDetailPage: MagazineDetailPageSelect<false> | MagazineDetailPageSelect<true>;
    eventDetailPage: EventDetailPageSelect<false> | EventDetailPageSelect<true>;
    newsDetailPage: NewsDetailPageSelect<false> | NewsDetailPageSelect<true>;
    publicationDetailPage: PublicationDetailPageSelect<false> | PublicationDetailPageSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    svgs: SvgsSelect<false> | SvgsSelect<true>;
    networkCategories: NetworkCategoriesSelect<false> | NetworkCategoriesSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    zenodoDocuments: ZenodoDocumentsSelect<false> | ZenodoDocumentsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    people: PeopleSelect<false> | PeopleSelect<true>;
    publicationTopics: PublicationTopicsSelect<false> | PublicationTopicsSelect<true>;
    publicationTypes: PublicationTypesSelect<false> | PublicationTypesSelect<true>;
    eventCategory: EventCategorySelect<false> | EventCategorySelect<true>;
    departments: DepartmentsSelect<false> | DepartmentsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    i18nForms: I18NFormsSelect<false> | I18NFormsSelect<true>;
    i18nGlobals: I18NGlobalsSelect<false> | I18NGlobalsSelect<true>;
    consent: ConsentSelect<false> | ConsentSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    statusMessage: StatusMessageSelect<false> | StatusMessageSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: 'de' | 'fr' | 'it' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage".
 */
export interface HomePage {
  id: string;
  department?: (string | null) | Department;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  hero: {
    title: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    lead?: string | null;
    animated?: boolean | null;
    sideTitle: string;
    optionalLink?: {
      includeLink?: boolean | null;
      link?: {
        openInNewWindow?: boolean | null;
        linkText: string;
        internalLink: string;
      };
    };
  };
  content?:
    | (
        | {
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            subtitle: string;
            textBlocks: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'titleSubtitleTextBlock';
          }
        | {
            title: string;
            links?:
              | {
                  linkType: 'internal' | 'external';
                  linkInternal?: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  linkExternal?: {
                    externalLinkText: string;
                    externalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linksBlock';
          }
        | {
            title: string;
            customOrAuto: 'custom' | 'auto';
            downloads?:
              | (
                  | {
                      relationTo: 'documents';
                      value: string | Document;
                    }
                  | {
                      relationTo: 'zenodoDocuments';
                      value: string | ZenodoDocument;
                    }
                )[]
              | null;
            project?: (string | null) | Project;
            id?: string | null;
            blockName?: string | null;
            blockType: 'downloadsBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
        | {
            title: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            acccordions: {
              accordionTitle: string;
              accordionContent: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordionBlock';
          }
        | {
            form?: (string | null) | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'formBlock';
          }
        | {
            title: string;
            text: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            contact: string | Person;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaContactBlock';
          }
        | {
            title: string;
            text: string;
            linkType: 'internal' | 'external';
            linkInternal?: {
              openInNewWindow?: boolean | null;
              linkText: string;
              internalLink: string;
            };
            linkExternal?: {
              externalLinkText: string;
              externalLink: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaLinkBlock';
          }
        | {
            homeTeasers?:
              | {
                  category: string;
                  title: string;
                  text: string;
                  icon: string | Svg;
                  openInNewWindow?: boolean | null;
                  linkText: string;
                  internalLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeTeasersBlock';
          }
        | {
            title: string;
            lead: string;
            /**
             * Align Title & text horizontally or vertically
             */
            alignement?: ('vertical' | 'horizontal') | null;
            textTeasers?:
              | {
                  title: string;
                  text: string;
                  link: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textTeasersBlock';
          }
        | {
            filter: {
              allCheckboxText: string;
              title: string;
            };
            items: {
              foundingYearText: string;
              linkText: string;
              items: {
                title: string;
                category: string | NetworkCategory;
                foundingYear: number;
                image: string | Image;
                externalLink: string;
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'networkTeasersBlock';
          }
        | {
            title?: string | null;
            teasers: {
              image:
                | {
                    relationTo: 'images';
                    value: string | Image;
                  }
                | {
                    relationTo: 'svgs';
                    value: string | Svg;
                  };
              title: string;
              text?: string | null;
              linkType: 'internal' | 'external';
              linkInternal?: {
                openInNewWindow?: boolean | null;
                linkText: string;
                internalLink: string;
              };
              linkExternal?: {
                externalLinkText: string;
                externalLink: string;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageTeasersBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'peopleOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsOverviewBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsTeasersBlock';
          }
        | {
            title: string;
            lead?: string | null;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsTeasersBlock';
          }
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "departments".
 */
export interface Department {
  id: string;
  name: string;
  /**
   * Used for domain-based department handling
   */
  domain?: string | null;
  /**
   * Used for url paths, example: /department-slug/page-slug
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  department?: (string | null) | Department;
  title: string;
  project?: (string | null) | Project;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * You can assign NewsDetail Pages, Event Detail Pages and Documents to a project. Then you could add a Downloads block to a page an tell it to list all downloads related to a project.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  department?: (string | null) | Department;
  name: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zenodoDocuments".
 */
export interface ZenodoDocument {
  id: string;
  department?: (string | null) | Department;
  zenodoId: string;
  title: string;
  publicationDate: string;
  files: {
    link?: string | null;
    format?: string | null;
    size?: number | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: string;
  department?: (string | null) | Department;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: string;
  department?: (string | null) | Department;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            placeholder: string;
            fieldError?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            placeholder: string;
            fieldError?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            placeholder: string;
            fieldError?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            placeholder: string;
            fieldError?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel: string;
  recipientEMail: string;
  successMessage: string;
  errorMessage: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people".
 */
export interface Person {
  id: string;
  department?: (string | null) | Department;
  'person-department': 'admin' | 'science' | 'com' | 'direction';
  memberType: 'executiveBoard' | 'team';
  prefix?: string | null;
  firstname: string;
  middleName?: string | null;
  lastname: string;
  function: string;
  mail: string;
  phone: string;
  image?: (string | null) | Image;
  fullName?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "svgs".
 */
export interface Svg {
  id: string;
  department?: (string | null) | Department;
  name: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networkCategories".
 */
export interface NetworkCategory {
  id: string;
  department?: (string | null) | Department;
  name: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage".
 */
export interface ErrorPage {
  id: string;
  department?: (string | null) | Department;
  homeButtonText: string;
  notFound: {
    title: string;
    description: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "overviewPage".
 */
export interface OverviewPage {
  id: string;
  department?: (string | null) | Department;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  hero: {
    title: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    lead?: string | null;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  content?:
    | (
        | {
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            subtitle: string;
            textBlocks: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'titleSubtitleTextBlock';
          }
        | {
            title: string;
            links?:
              | {
                  linkType: 'internal' | 'external';
                  linkInternal?: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  linkExternal?: {
                    externalLinkText: string;
                    externalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linksBlock';
          }
        | {
            title: string;
            customOrAuto: 'custom' | 'auto';
            downloads?:
              | (
                  | {
                      relationTo: 'documents';
                      value: string | Document;
                    }
                  | {
                      relationTo: 'zenodoDocuments';
                      value: string | ZenodoDocument;
                    }
                )[]
              | null;
            project?: (string | null) | Project;
            id?: string | null;
            blockName?: string | null;
            blockType: 'downloadsBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
        | {
            title: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            acccordions: {
              accordionTitle: string;
              accordionContent: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordionBlock';
          }
        | {
            form?: (string | null) | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'formBlock';
          }
        | {
            title: string;
            text: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            contact: string | Person;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaContactBlock';
          }
        | {
            title: string;
            text: string;
            linkType: 'internal' | 'external';
            linkInternal?: {
              openInNewWindow?: boolean | null;
              linkText: string;
              internalLink: string;
            };
            linkExternal?: {
              externalLinkText: string;
              externalLink: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaLinkBlock';
          }
        | {
            homeTeasers?:
              | {
                  category: string;
                  title: string;
                  text: string;
                  icon: string | Svg;
                  openInNewWindow?: boolean | null;
                  linkText: string;
                  internalLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeTeasersBlock';
          }
        | {
            title: string;
            lead: string;
            /**
             * Align Title & text horizontally or vertically
             */
            alignement?: ('vertical' | 'horizontal') | null;
            textTeasers?:
              | {
                  title: string;
                  text: string;
                  link: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textTeasersBlock';
          }
        | {
            filter: {
              allCheckboxText: string;
              title: string;
            };
            items: {
              foundingYearText: string;
              linkText: string;
              items: {
                title: string;
                category: string | NetworkCategory;
                foundingYear: number;
                image: string | Image;
                externalLink: string;
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'networkTeasersBlock';
          }
        | {
            title?: string | null;
            teasers: {
              image:
                | {
                    relationTo: 'images';
                    value: string | Image;
                  }
                | {
                    relationTo: 'svgs';
                    value: string | Svg;
                  };
              title: string;
              text?: string | null;
              linkType: 'internal' | 'external';
              linkInternal?: {
                openInNewWindow?: boolean | null;
                linkText: string;
                internalLink: string;
              };
              linkExternal?: {
                externalLinkText: string;
                externalLink: string;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageTeasersBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'peopleOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsOverviewBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsTeasersBlock';
          }
        | {
            title: string;
            lead?: string | null;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsTeasersBlock';
          }
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "detailPage".
 */
export interface DetailPage {
  id: string;
  department?: (string | null) | Department;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  hero: {
    title: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    lead?: string | null;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  content?:
    | (
        | {
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            subtitle: string;
            textBlocks: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'titleSubtitleTextBlock';
          }
        | {
            title: string;
            links?:
              | {
                  linkType: 'internal' | 'external';
                  linkInternal?: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  linkExternal?: {
                    externalLinkText: string;
                    externalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linksBlock';
          }
        | {
            title: string;
            customOrAuto: 'custom' | 'auto';
            downloads?:
              | (
                  | {
                      relationTo: 'documents';
                      value: string | Document;
                    }
                  | {
                      relationTo: 'zenodoDocuments';
                      value: string | ZenodoDocument;
                    }
                )[]
              | null;
            project?: (string | null) | Project;
            id?: string | null;
            blockName?: string | null;
            blockType: 'downloadsBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
        | {
            title: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            acccordions: {
              accordionTitle: string;
              accordionContent: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordionBlock';
          }
        | {
            form?: (string | null) | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'formBlock';
          }
        | {
            title: string;
            text: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            contact: string | Person;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaContactBlock';
          }
        | {
            title: string;
            text: string;
            linkType: 'internal' | 'external';
            linkInternal?: {
              openInNewWindow?: boolean | null;
              linkText: string;
              internalLink: string;
            };
            linkExternal?: {
              externalLinkText: string;
              externalLink: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaLinkBlock';
          }
        | {
            homeTeasers?:
              | {
                  category: string;
                  title: string;
                  text: string;
                  icon: string | Svg;
                  openInNewWindow?: boolean | null;
                  linkText: string;
                  internalLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeTeasersBlock';
          }
        | {
            title: string;
            lead: string;
            /**
             * Align Title & text horizontally or vertically
             */
            alignement?: ('vertical' | 'horizontal') | null;
            textTeasers?:
              | {
                  title: string;
                  text: string;
                  link: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textTeasersBlock';
          }
        | {
            filter: {
              allCheckboxText: string;
              title: string;
            };
            items: {
              foundingYearText: string;
              linkText: string;
              items: {
                title: string;
                category: string | NetworkCategory;
                foundingYear: number;
                image: string | Image;
                externalLink: string;
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'networkTeasersBlock';
          }
        | {
            title?: string | null;
            teasers: {
              image:
                | {
                    relationTo: 'images';
                    value: string | Image;
                  }
                | {
                    relationTo: 'svgs';
                    value: string | Svg;
                  };
              title: string;
              text?: string | null;
              linkType: 'internal' | 'external';
              linkInternal?: {
                openInNewWindow?: boolean | null;
                linkText: string;
                internalLink: string;
              };
              linkExternal?: {
                externalLinkText: string;
                externalLink: string;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageTeasersBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'peopleOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsOverviewBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsTeasersBlock';
          }
        | {
            title: string;
            lead?: string | null;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsTeasersBlock';
          }
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineDetailPage".
 */
export interface MagazineDetailPage {
  id: string;
  department?: (string | null) | Department;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  overviewPageProps: {
    /**
     * This text will be used as text for the teasers on the overview page.
     */
    teaserText: string;
  };
  hero: {
    title: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    lead?: string | null;
    author: string;
    date: string;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  content?:
    | (
        | {
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            subtitle: string;
            textBlocks: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'titleSubtitleTextBlock';
          }
        | {
            title: string;
            links?:
              | {
                  linkType: 'internal' | 'external';
                  linkInternal?: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  linkExternal?: {
                    externalLinkText: string;
                    externalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linksBlock';
          }
        | {
            title: string;
            customOrAuto: 'custom' | 'auto';
            downloads?:
              | (
                  | {
                      relationTo: 'documents';
                      value: string | Document;
                    }
                  | {
                      relationTo: 'zenodoDocuments';
                      value: string | ZenodoDocument;
                    }
                )[]
              | null;
            project?: (string | null) | Project;
            id?: string | null;
            blockName?: string | null;
            blockType: 'downloadsBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
        | {
            title: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            acccordions: {
              accordionTitle: string;
              accordionContent: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordionBlock';
          }
        | {
            form?: (string | null) | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'formBlock';
          }
        | {
            title: string;
            text: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            contact: string | Person;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaContactBlock';
          }
        | {
            title: string;
            text: string;
            linkType: 'internal' | 'external';
            linkInternal?: {
              openInNewWindow?: boolean | null;
              linkText: string;
              internalLink: string;
            };
            linkExternal?: {
              externalLinkText: string;
              externalLink: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaLinkBlock';
          }
        | {
            homeTeasers?:
              | {
                  category: string;
                  title: string;
                  text: string;
                  icon: string | Svg;
                  openInNewWindow?: boolean | null;
                  linkText: string;
                  internalLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeTeasersBlock';
          }
        | {
            title: string;
            lead: string;
            /**
             * Align Title & text horizontally or vertically
             */
            alignement?: ('vertical' | 'horizontal') | null;
            textTeasers?:
              | {
                  title: string;
                  text: string;
                  link: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textTeasersBlock';
          }
        | {
            filter: {
              allCheckboxText: string;
              title: string;
            };
            items: {
              foundingYearText: string;
              linkText: string;
              items: {
                title: string;
                category: string | NetworkCategory;
                foundingYear: number;
                image: string | Image;
                externalLink: string;
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'networkTeasersBlock';
          }
        | {
            title?: string | null;
            teasers: {
              image:
                | {
                    relationTo: 'images';
                    value: string | Image;
                  }
                | {
                    relationTo: 'svgs';
                    value: string | Svg;
                  };
              title: string;
              text?: string | null;
              linkType: 'internal' | 'external';
              linkInternal?: {
                openInNewWindow?: boolean | null;
                linkText: string;
                internalLink: string;
              };
              linkExternal?: {
                externalLinkText: string;
                externalLink: string;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageTeasersBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'peopleOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsOverviewBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsTeasersBlock';
          }
        | {
            title: string;
            lead?: string | null;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsTeasersBlock';
          }
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventDetailPage".
 */
export interface EventDetailPage {
  id: string;
  department?: (string | null) | Department;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  eventDetails: {
    title: string;
    location?: string | null;
    language?: string | null;
    time?: string | null;
    category?: (string | null) | EventCategory;
    project?: (string | null) | Project;
    date: string;
    multipleDays?: boolean | null;
    dateEnd?: string | null;
  };
  showDetailPage?: ('true' | 'false') | null;
  hero: {
    title: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    lead?: string | null;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  content?:
    | (
        | {
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            subtitle: string;
            textBlocks: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'titleSubtitleTextBlock';
          }
        | {
            title: string;
            links?:
              | {
                  linkType: 'internal' | 'external';
                  linkInternal?: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  linkExternal?: {
                    externalLinkText: string;
                    externalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linksBlock';
          }
        | {
            title: string;
            customOrAuto: 'custom' | 'auto';
            downloads?:
              | (
                  | {
                      relationTo: 'documents';
                      value: string | Document;
                    }
                  | {
                      relationTo: 'zenodoDocuments';
                      value: string | ZenodoDocument;
                    }
                )[]
              | null;
            project?: (string | null) | Project;
            id?: string | null;
            blockName?: string | null;
            blockType: 'downloadsBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
        | {
            title: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            acccordions: {
              accordionTitle: string;
              accordionContent: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordionBlock';
          }
        | {
            form?: (string | null) | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'formBlock';
          }
        | {
            title: string;
            text: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            contact: string | Person;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaContactBlock';
          }
        | {
            title: string;
            text: string;
            linkType: 'internal' | 'external';
            linkInternal?: {
              openInNewWindow?: boolean | null;
              linkText: string;
              internalLink: string;
            };
            linkExternal?: {
              externalLinkText: string;
              externalLink: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaLinkBlock';
          }
        | {
            homeTeasers?:
              | {
                  category: string;
                  title: string;
                  text: string;
                  icon: string | Svg;
                  openInNewWindow?: boolean | null;
                  linkText: string;
                  internalLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeTeasersBlock';
          }
        | {
            title: string;
            lead: string;
            /**
             * Align Title & text horizontally or vertically
             */
            alignement?: ('vertical' | 'horizontal') | null;
            textTeasers?:
              | {
                  title: string;
                  text: string;
                  link: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textTeasersBlock';
          }
        | {
            filter: {
              allCheckboxText: string;
              title: string;
            };
            items: {
              foundingYearText: string;
              linkText: string;
              items: {
                title: string;
                category: string | NetworkCategory;
                foundingYear: number;
                image: string | Image;
                externalLink: string;
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'networkTeasersBlock';
          }
        | {
            title?: string | null;
            teasers: {
              image:
                | {
                    relationTo: 'images';
                    value: string | Image;
                  }
                | {
                    relationTo: 'svgs';
                    value: string | Svg;
                  };
              title: string;
              text?: string | null;
              linkType: 'internal' | 'external';
              linkInternal?: {
                openInNewWindow?: boolean | null;
                linkText: string;
                internalLink: string;
              };
              linkExternal?: {
                externalLinkText: string;
                externalLink: string;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageTeasersBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'peopleOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsOverviewBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsTeasersBlock';
          }
        | {
            title: string;
            lead?: string | null;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsTeasersBlock';
          }
      )[]
    | null;
  link?: {
    externalLinkText: string;
    externalLink: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventCategory".
 */
export interface EventCategory {
  id: string;
  department?: (string | null) | Department;
  eventCategory: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsDetailPage".
 */
export interface NewsDetailPage {
  id: string;
  department?: (string | null) | Department;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  overviewPageProps: {
    /**
     * This text will be used as text for the teasers on the overview page.
     */
    teaserText: string;
  };
  hero: {
    title: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    lead?: string | null;
    date: string;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  project?: (string | null) | Project;
  content?:
    | (
        | {
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            subtitle: string;
            textBlocks: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'titleSubtitleTextBlock';
          }
        | {
            title: string;
            links?:
              | {
                  linkType: 'internal' | 'external';
                  linkInternal?: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  linkExternal?: {
                    externalLinkText: string;
                    externalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linksBlock';
          }
        | {
            title: string;
            customOrAuto: 'custom' | 'auto';
            downloads?:
              | (
                  | {
                      relationTo: 'documents';
                      value: string | Document;
                    }
                  | {
                      relationTo: 'zenodoDocuments';
                      value: string | ZenodoDocument;
                    }
                )[]
              | null;
            project?: (string | null) | Project;
            id?: string | null;
            blockName?: string | null;
            blockType: 'downloadsBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
        | {
            title: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            acccordions: {
              accordionTitle: string;
              accordionContent: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordionBlock';
          }
        | {
            form?: (string | null) | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'formBlock';
          }
        | {
            title: string;
            text: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            contact: string | Person;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaContactBlock';
          }
        | {
            title: string;
            text: string;
            linkType: 'internal' | 'external';
            linkInternal?: {
              openInNewWindow?: boolean | null;
              linkText: string;
              internalLink: string;
            };
            linkExternal?: {
              externalLinkText: string;
              externalLink: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaLinkBlock';
          }
        | {
            homeTeasers?:
              | {
                  category: string;
                  title: string;
                  text: string;
                  icon: string | Svg;
                  openInNewWindow?: boolean | null;
                  linkText: string;
                  internalLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeTeasersBlock';
          }
        | {
            title: string;
            lead: string;
            /**
             * Align Title & text horizontally or vertically
             */
            alignement?: ('vertical' | 'horizontal') | null;
            textTeasers?:
              | {
                  title: string;
                  text: string;
                  link: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textTeasersBlock';
          }
        | {
            filter: {
              allCheckboxText: string;
              title: string;
            };
            items: {
              foundingYearText: string;
              linkText: string;
              items: {
                title: string;
                category: string | NetworkCategory;
                foundingYear: number;
                image: string | Image;
                externalLink: string;
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'networkTeasersBlock';
          }
        | {
            title?: string | null;
            teasers: {
              image:
                | {
                    relationTo: 'images';
                    value: string | Image;
                  }
                | {
                    relationTo: 'svgs';
                    value: string | Svg;
                  };
              title: string;
              text?: string | null;
              linkType: 'internal' | 'external';
              linkInternal?: {
                openInNewWindow?: boolean | null;
                linkText: string;
                internalLink: string;
              };
              linkExternal?: {
                externalLinkText: string;
                externalLink: string;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageTeasersBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'peopleOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsOverviewBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsTeasersBlock';
          }
        | {
            title: string;
            lead?: string | null;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsTeasersBlock';
          }
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationDetailPage".
 */
export interface PublicationDetailPage {
  id: string;
  department?: (string | null) | Department;
  isLinkable?: boolean | null;
  adminTitle?: string | null;
  overviewPageProps: {
    /**
     * This image will be used for the teasers on the overview page.
     */
    image: string | Image;
  };
  categorization: {
    topic: string | PublicationTopic;
    type: string | PublicationType;
  };
  hero: {
    title: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    lead?: string | null;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  content?:
    | (
        | {
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            title: string;
            subtitle: string;
            textBlocks: {
              text: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'titleSubtitleTextBlock';
          }
        | {
            title: string;
            links?:
              | {
                  linkType: 'internal' | 'external';
                  linkInternal?: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  linkExternal?: {
                    externalLinkText: string;
                    externalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linksBlock';
          }
        | {
            title: string;
            customOrAuto: 'custom' | 'auto';
            downloads?:
              | (
                  | {
                      relationTo: 'documents';
                      value: string | Document;
                    }
                  | {
                      relationTo: 'zenodoDocuments';
                      value: string | ZenodoDocument;
                    }
                )[]
              | null;
            project?: (string | null) | Project;
            id?: string | null;
            blockName?: string | null;
            blockType: 'downloadsBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
        | {
            title: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            acccordions: {
              accordionTitle: string;
              accordionContent: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordionBlock';
          }
        | {
            form?: (string | null) | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'formBlock';
          }
        | {
            title: string;
            text: string;
            colorMode: 'white' | 'color';
            colorScheme?: ('bright' | 'dark') | null;
            contact: string | Person;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaContactBlock';
          }
        | {
            title: string;
            text: string;
            linkType: 'internal' | 'external';
            linkInternal?: {
              openInNewWindow?: boolean | null;
              linkText: string;
              internalLink: string;
            };
            linkExternal?: {
              externalLinkText: string;
              externalLink: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaLinkBlock';
          }
        | {
            homeTeasers?:
              | {
                  category: string;
                  title: string;
                  text: string;
                  icon: string | Svg;
                  openInNewWindow?: boolean | null;
                  linkText: string;
                  internalLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeTeasersBlock';
          }
        | {
            title: string;
            lead: string;
            /**
             * Align Title & text horizontally or vertically
             */
            alignement?: ('vertical' | 'horizontal') | null;
            textTeasers?:
              | {
                  title: string;
                  text: string;
                  link: {
                    openInNewWindow?: boolean | null;
                    linkText: string;
                    internalLink: string;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textTeasersBlock';
          }
        | {
            filter: {
              allCheckboxText: string;
              title: string;
            };
            items: {
              foundingYearText: string;
              linkText: string;
              items: {
                title: string;
                category: string | NetworkCategory;
                foundingYear: number;
                image: string | Image;
                externalLink: string;
                id?: string | null;
              }[];
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'networkTeasersBlock';
          }
        | {
            title?: string | null;
            teasers: {
              image:
                | {
                    relationTo: 'images';
                    value: string | Image;
                  }
                | {
                    relationTo: 'svgs';
                    value: string | Svg;
                  };
              title: string;
              text?: string | null;
              linkType: 'internal' | 'external';
              linkInternal?: {
                openInNewWindow?: boolean | null;
                linkText: string;
                internalLink: string;
              };
              linkExternal?: {
                externalLinkText: string;
                externalLink: string;
              };
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageTeasersBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'peopleOverviewBlock';
          }
        | {
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsOverviewBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eventsTeasersBlock';
          }
        | {
            title: string;
            lead?: string | null;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'magazineTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            project?: (string | null) | Project;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsTeasersBlock';
          }
        | {
            title: string;
            linkText: string;
            message?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'publicationsTeasersBlock';
          }
      )[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTopics".
 */
export interface PublicationTopic {
  id: string;
  department?: (string | null) | Department;
  publicationTopic: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTypes".
 */
export interface PublicationType {
  id: string;
  department?: (string | null) | Department;
  publicationType: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  department?: (string | null) | Department;
  roles?: ('global-admin' | 'global-user')[] | null;
  username?: string | null;
  departments?:
    | {
        department: string | Department;
        roles: ('admin' | 'editor' | 'editor-magazine' | 'translator')[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "i18nForms".
 */
export interface I18NForm {
  id: string;
  department?: (string | null) | Department;
  inputFields: {
    email: {
      label: string;
      placeholder: string;
      error: string;
    };
    message: {
      label: string;
      placeholder: string;
      error: string;
    };
    name: {
      label: string;
      placeholder: string;
      error: string;
    };
  };
  checkboxes: {
    dataPrivacyCheckboxText: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  submitSuccess: {
    title: string;
    text: string;
    optionalLink?: {
      includeLink?: boolean | null;
      link?: {
        openInNewWindow?: boolean | null;
        linkText: string;
        internalLink: string;
      };
    };
  };
  submitError: {
    title: string;
    text: string;
    optionalLink?: {
      includeLink?: boolean | null;
      link?: {
        openInNewWindow?: boolean | null;
        linkText: string;
        internalLink: string;
      };
    };
  };
  submitWarn: {
    title: string;
    text: string;
    optionalLink?: {
      includeLink?: boolean | null;
      link?: {
        openInNewWindow?: boolean | null;
        linkText: string;
        internalLink: string;
      };
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "i18nGlobals".
 */
export interface I18NGlobal {
  id: string;
  department?: (string | null) | Department;
  sectionTitles: {
    download: string;
    links: string;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "consent".
 */
export interface Consent {
  id: string;
  department?: (string | null) | Department;
  adminTitle?: string | null;
  banner: {
    title: string;
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonAcceptAll: string;
    buttonCustomizeSelection: string;
    buttonDeclineAll: string;
  };
  overlay: {
    title: string;
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonAcceptAll: string;
    buttonAcceptSelection: string;
    necessaryCookies: {
      title: string;
      text: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabel: string;
    };
    analyticsPerformance: {
      title: string;
      text: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabelOff: string;
      toggleLabelOn: string;
      toggleDefault?: ('on' | 'off') | null;
    };
    externalContent: {
      title: string;
      text: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      toggleLabelOff: string;
      toggleLabelOn: string;
      toggleDefault?: ('on' | 'off') | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  department?: (string | null) | Department;
  adminTitle?: string | null;
  legal: string;
  impressum: string;
  copyright: string;
  contact: {
    title: string;
    address1: string;
    address2: string;
    poBox: string;
    countryCode: string;
    zipCode: string;
    city: string;
    phone: string;
    mail: string;
  };
  socialLinks?:
    | {
        externalLinkText: string;
        externalLink: string;
        icon?: ('linkedIn' | 'twitter' | 'facebook') | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  department?: (string | null) | Department;
  adminTitle?: string | null;
  navItems: {
    navItemText: string;
    navItemLink?: string | null;
    navItems?:
      | {
          navItemText: string;
          navItemLink?: string | null;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  metaLinks?:
    | {
        linkType: 'internal' | 'external';
        linkInternal?: {
          openInNewWindow?: boolean | null;
          linkText: string;
          internalLink: string;
        };
        linkExternal?: {
          externalLinkText: string;
          externalLink: string;
        };
        id?: string | null;
      }[]
    | null;
  logo: string | Svg;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statusMessage".
 */
export interface StatusMessage {
  id: string;
  department?: (string | null) | Department;
  adminTitle?: string | null;
  show: {
    /**
     * Show, hide or define date range when to show the message.
     */
    display: 'show' | 'hide' | 'date';
    from?: string | null;
    to?: string | null;
  };
  title: string;
  message: string;
  optionalLink?: {
    includeLink?: boolean | null;
    link?: {
      openInNewWindow?: boolean | null;
      linkText: string;
      internalLink: string;
    };
  };
  /**
   * Should the message be displayed on home only or everywhere?
   */
  showOnHomeOnly?: boolean | null;
  type: 'warn' | 'error' | 'success';
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'homePage';
        value: string | HomePage;
      } | null)
    | ({
        relationTo: 'errorPage';
        value: string | ErrorPage;
      } | null)
    | ({
        relationTo: 'overviewPage';
        value: string | OverviewPage;
      } | null)
    | ({
        relationTo: 'detailPage';
        value: string | DetailPage;
      } | null)
    | ({
        relationTo: 'magazineDetailPage';
        value: string | MagazineDetailPage;
      } | null)
    | ({
        relationTo: 'eventDetailPage';
        value: string | EventDetailPage;
      } | null)
    | ({
        relationTo: 'newsDetailPage';
        value: string | NewsDetailPage;
      } | null)
    | ({
        relationTo: 'publicationDetailPage';
        value: string | PublicationDetailPage;
      } | null)
    | ({
        relationTo: 'images';
        value: string | Image;
      } | null)
    | ({
        relationTo: 'videos';
        value: string | Video;
      } | null)
    | ({
        relationTo: 'svgs';
        value: string | Svg;
      } | null)
    | ({
        relationTo: 'networkCategories';
        value: string | NetworkCategory;
      } | null)
    | ({
        relationTo: 'documents';
        value: string | Document;
      } | null)
    | ({
        relationTo: 'zenodoDocuments';
        value: string | ZenodoDocument;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null)
    | ({
        relationTo: 'people';
        value: string | Person;
      } | null)
    | ({
        relationTo: 'publicationTopics';
        value: string | PublicationTopic;
      } | null)
    | ({
        relationTo: 'publicationTypes';
        value: string | PublicationType;
      } | null)
    | ({
        relationTo: 'eventCategory';
        value: string | EventCategory;
      } | null)
    | ({
        relationTo: 'departments';
        value: string | Department;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'i18nForms';
        value: string | I18NForm;
      } | null)
    | ({
        relationTo: 'i18nGlobals';
        value: string | I18NGlobal;
      } | null)
    | ({
        relationTo: 'consent';
        value: string | Consent;
      } | null)
    | ({
        relationTo: 'footer';
        value: string | Footer;
      } | null)
    | ({
        relationTo: 'header';
        value: string | Header;
      } | null)
    | ({
        relationTo: 'statusMessage';
        value: string | StatusMessage;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  department?: T;
  isLinkable?: T;
  adminTitle?: T;
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        animated?: T;
        sideTitle?: T;
        optionalLink?:
          | T
          | {
              includeLink?: T;
              link?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
            };
      };
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        titleSubtitleTextBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              textBlocks?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        linksBlock?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        downloadsBlock?:
          | T
          | {
              title?: T;
              customOrAuto?: T;
              downloads?: T;
              project?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
        accordionBlock?:
          | T
          | {
              title?: T;
              colorMode?: T;
              colorScheme?: T;
              acccordions?:
                | T
                | {
                    accordionTitle?: T;
                    accordionContent?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
        ctaContactBlock?:
          | T
          | {
              title?: T;
              text?: T;
              colorMode?: T;
              colorScheme?: T;
              contact?: T;
              id?: T;
              blockName?: T;
            };
        ctaLinkBlock?:
          | T
          | {
              title?: T;
              text?: T;
              linkType?: T;
              linkInternal?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
              linkExternal?:
                | T
                | {
                    externalLinkText?: T;
                    externalLink?: T;
                  };
              id?: T;
              blockName?: T;
            };
        homeTeasersBlock?:
          | T
          | {
              homeTeasers?:
                | T
                | {
                    category?: T;
                    title?: T;
                    text?: T;
                    icon?: T;
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              textTeasers?:
                | T
                | {
                    title?: T;
                    text?: T;
                    link?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        networkTeasersBlock?:
          | T
          | {
              filter?:
                | T
                | {
                    allCheckboxText?: T;
                    title?: T;
                  };
              items?:
                | T
                | {
                    foundingYearText?: T;
                    linkText?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          category?: T;
                          foundingYear?: T;
                          image?: T;
                          externalLink?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        imageTeasersBlock?:
          | T
          | {
              title?: T;
              teasers?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        magazineOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        peopleOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        magazineTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage_select".
 */
export interface ErrorPageSelect<T extends boolean = true> {
  department?: T;
  homeButtonText?: T;
  notFound?:
    | T
    | {
        title?: T;
        description?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "overviewPage_select".
 */
export interface OverviewPageSelect<T extends boolean = true> {
  department?: T;
  isLinkable?: T;
  adminTitle?: T;
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        titleSubtitleTextBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              textBlocks?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        linksBlock?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        downloadsBlock?:
          | T
          | {
              title?: T;
              customOrAuto?: T;
              downloads?: T;
              project?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
        accordionBlock?:
          | T
          | {
              title?: T;
              colorMode?: T;
              colorScheme?: T;
              acccordions?:
                | T
                | {
                    accordionTitle?: T;
                    accordionContent?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
        ctaContactBlock?:
          | T
          | {
              title?: T;
              text?: T;
              colorMode?: T;
              colorScheme?: T;
              contact?: T;
              id?: T;
              blockName?: T;
            };
        ctaLinkBlock?:
          | T
          | {
              title?: T;
              text?: T;
              linkType?: T;
              linkInternal?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
              linkExternal?:
                | T
                | {
                    externalLinkText?: T;
                    externalLink?: T;
                  };
              id?: T;
              blockName?: T;
            };
        homeTeasersBlock?:
          | T
          | {
              homeTeasers?:
                | T
                | {
                    category?: T;
                    title?: T;
                    text?: T;
                    icon?: T;
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              textTeasers?:
                | T
                | {
                    title?: T;
                    text?: T;
                    link?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        networkTeasersBlock?:
          | T
          | {
              filter?:
                | T
                | {
                    allCheckboxText?: T;
                    title?: T;
                  };
              items?:
                | T
                | {
                    foundingYearText?: T;
                    linkText?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          category?: T;
                          foundingYear?: T;
                          image?: T;
                          externalLink?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        imageTeasersBlock?:
          | T
          | {
              title?: T;
              teasers?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        magazineOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        peopleOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        magazineTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "detailPage_select".
 */
export interface DetailPageSelect<T extends boolean = true> {
  department?: T;
  isLinkable?: T;
  adminTitle?: T;
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        titleSubtitleTextBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              textBlocks?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        linksBlock?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        downloadsBlock?:
          | T
          | {
              title?: T;
              customOrAuto?: T;
              downloads?: T;
              project?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
        accordionBlock?:
          | T
          | {
              title?: T;
              colorMode?: T;
              colorScheme?: T;
              acccordions?:
                | T
                | {
                    accordionTitle?: T;
                    accordionContent?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
        ctaContactBlock?:
          | T
          | {
              title?: T;
              text?: T;
              colorMode?: T;
              colorScheme?: T;
              contact?: T;
              id?: T;
              blockName?: T;
            };
        ctaLinkBlock?:
          | T
          | {
              title?: T;
              text?: T;
              linkType?: T;
              linkInternal?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
              linkExternal?:
                | T
                | {
                    externalLinkText?: T;
                    externalLink?: T;
                  };
              id?: T;
              blockName?: T;
            };
        homeTeasersBlock?:
          | T
          | {
              homeTeasers?:
                | T
                | {
                    category?: T;
                    title?: T;
                    text?: T;
                    icon?: T;
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              textTeasers?:
                | T
                | {
                    title?: T;
                    text?: T;
                    link?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        networkTeasersBlock?:
          | T
          | {
              filter?:
                | T
                | {
                    allCheckboxText?: T;
                    title?: T;
                  };
              items?:
                | T
                | {
                    foundingYearText?: T;
                    linkText?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          category?: T;
                          foundingYear?: T;
                          image?: T;
                          externalLink?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        imageTeasersBlock?:
          | T
          | {
              title?: T;
              teasers?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        magazineOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        peopleOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        magazineTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineDetailPage_select".
 */
export interface MagazineDetailPageSelect<T extends boolean = true> {
  department?: T;
  isLinkable?: T;
  adminTitle?: T;
  overviewPageProps?:
    | T
    | {
        teaserText?: T;
      };
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        author?: T;
        date?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        titleSubtitleTextBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              textBlocks?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        linksBlock?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        downloadsBlock?:
          | T
          | {
              title?: T;
              customOrAuto?: T;
              downloads?: T;
              project?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
        accordionBlock?:
          | T
          | {
              title?: T;
              colorMode?: T;
              colorScheme?: T;
              acccordions?:
                | T
                | {
                    accordionTitle?: T;
                    accordionContent?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
        ctaContactBlock?:
          | T
          | {
              title?: T;
              text?: T;
              colorMode?: T;
              colorScheme?: T;
              contact?: T;
              id?: T;
              blockName?: T;
            };
        ctaLinkBlock?:
          | T
          | {
              title?: T;
              text?: T;
              linkType?: T;
              linkInternal?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
              linkExternal?:
                | T
                | {
                    externalLinkText?: T;
                    externalLink?: T;
                  };
              id?: T;
              blockName?: T;
            };
        homeTeasersBlock?:
          | T
          | {
              homeTeasers?:
                | T
                | {
                    category?: T;
                    title?: T;
                    text?: T;
                    icon?: T;
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              textTeasers?:
                | T
                | {
                    title?: T;
                    text?: T;
                    link?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        networkTeasersBlock?:
          | T
          | {
              filter?:
                | T
                | {
                    allCheckboxText?: T;
                    title?: T;
                  };
              items?:
                | T
                | {
                    foundingYearText?: T;
                    linkText?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          category?: T;
                          foundingYear?: T;
                          image?: T;
                          externalLink?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        imageTeasersBlock?:
          | T
          | {
              title?: T;
              teasers?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        magazineOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        peopleOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        magazineTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventDetailPage_select".
 */
export interface EventDetailPageSelect<T extends boolean = true> {
  department?: T;
  isLinkable?: T;
  adminTitle?: T;
  eventDetails?:
    | T
    | {
        title?: T;
        location?: T;
        language?: T;
        time?: T;
        category?: T;
        project?: T;
        date?: T;
        multipleDays?: T;
        dateEnd?: T;
      };
  showDetailPage?: T;
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        titleSubtitleTextBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              textBlocks?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        linksBlock?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        downloadsBlock?:
          | T
          | {
              title?: T;
              customOrAuto?: T;
              downloads?: T;
              project?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
        accordionBlock?:
          | T
          | {
              title?: T;
              colorMode?: T;
              colorScheme?: T;
              acccordions?:
                | T
                | {
                    accordionTitle?: T;
                    accordionContent?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
        ctaContactBlock?:
          | T
          | {
              title?: T;
              text?: T;
              colorMode?: T;
              colorScheme?: T;
              contact?: T;
              id?: T;
              blockName?: T;
            };
        ctaLinkBlock?:
          | T
          | {
              title?: T;
              text?: T;
              linkType?: T;
              linkInternal?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
              linkExternal?:
                | T
                | {
                    externalLinkText?: T;
                    externalLink?: T;
                  };
              id?: T;
              blockName?: T;
            };
        homeTeasersBlock?:
          | T
          | {
              homeTeasers?:
                | T
                | {
                    category?: T;
                    title?: T;
                    text?: T;
                    icon?: T;
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              textTeasers?:
                | T
                | {
                    title?: T;
                    text?: T;
                    link?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        networkTeasersBlock?:
          | T
          | {
              filter?:
                | T
                | {
                    allCheckboxText?: T;
                    title?: T;
                  };
              items?:
                | T
                | {
                    foundingYearText?: T;
                    linkText?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          category?: T;
                          foundingYear?: T;
                          image?: T;
                          externalLink?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        imageTeasersBlock?:
          | T
          | {
              title?: T;
              teasers?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        magazineOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        peopleOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        magazineTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
      };
  link?:
    | T
    | {
        externalLinkText?: T;
        externalLink?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsDetailPage_select".
 */
export interface NewsDetailPageSelect<T extends boolean = true> {
  department?: T;
  isLinkable?: T;
  adminTitle?: T;
  overviewPageProps?:
    | T
    | {
        teaserText?: T;
      };
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        date?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  project?: T;
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        titleSubtitleTextBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              textBlocks?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        linksBlock?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        downloadsBlock?:
          | T
          | {
              title?: T;
              customOrAuto?: T;
              downloads?: T;
              project?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
        accordionBlock?:
          | T
          | {
              title?: T;
              colorMode?: T;
              colorScheme?: T;
              acccordions?:
                | T
                | {
                    accordionTitle?: T;
                    accordionContent?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
        ctaContactBlock?:
          | T
          | {
              title?: T;
              text?: T;
              colorMode?: T;
              colorScheme?: T;
              contact?: T;
              id?: T;
              blockName?: T;
            };
        ctaLinkBlock?:
          | T
          | {
              title?: T;
              text?: T;
              linkType?: T;
              linkInternal?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
              linkExternal?:
                | T
                | {
                    externalLinkText?: T;
                    externalLink?: T;
                  };
              id?: T;
              blockName?: T;
            };
        homeTeasersBlock?:
          | T
          | {
              homeTeasers?:
                | T
                | {
                    category?: T;
                    title?: T;
                    text?: T;
                    icon?: T;
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              textTeasers?:
                | T
                | {
                    title?: T;
                    text?: T;
                    link?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        networkTeasersBlock?:
          | T
          | {
              filter?:
                | T
                | {
                    allCheckboxText?: T;
                    title?: T;
                  };
              items?:
                | T
                | {
                    foundingYearText?: T;
                    linkText?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          category?: T;
                          foundingYear?: T;
                          image?: T;
                          externalLink?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        imageTeasersBlock?:
          | T
          | {
              title?: T;
              teasers?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        magazineOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        peopleOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        magazineTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationDetailPage_select".
 */
export interface PublicationDetailPageSelect<T extends boolean = true> {
  department?: T;
  isLinkable?: T;
  adminTitle?: T;
  overviewPageProps?:
    | T
    | {
        image?: T;
      };
  categorization?:
    | T
    | {
        topic?: T;
        type?: T;
      };
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  content?:
    | T
    | {
        textBlock?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        titleSubtitleTextBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              textBlocks?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        linksBlock?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        downloadsBlock?:
          | T
          | {
              title?: T;
              customOrAuto?: T;
              downloads?: T;
              project?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
        accordionBlock?:
          | T
          | {
              title?: T;
              colorMode?: T;
              colorScheme?: T;
              acccordions?:
                | T
                | {
                    accordionTitle?: T;
                    accordionContent?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
        ctaContactBlock?:
          | T
          | {
              title?: T;
              text?: T;
              colorMode?: T;
              colorScheme?: T;
              contact?: T;
              id?: T;
              blockName?: T;
            };
        ctaLinkBlock?:
          | T
          | {
              title?: T;
              text?: T;
              linkType?: T;
              linkInternal?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
              linkExternal?:
                | T
                | {
                    externalLinkText?: T;
                    externalLink?: T;
                  };
              id?: T;
              blockName?: T;
            };
        homeTeasersBlock?:
          | T
          | {
              homeTeasers?:
                | T
                | {
                    category?: T;
                    title?: T;
                    text?: T;
                    icon?: T;
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              textTeasers?:
                | T
                | {
                    title?: T;
                    text?: T;
                    link?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        networkTeasersBlock?:
          | T
          | {
              filter?:
                | T
                | {
                    allCheckboxText?: T;
                    title?: T;
                  };
              items?:
                | T
                | {
                    foundingYearText?: T;
                    linkText?: T;
                    items?:
                      | T
                      | {
                          title?: T;
                          category?: T;
                          foundingYear?: T;
                          image?: T;
                          externalLink?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        imageTeasersBlock?:
          | T
          | {
              title?: T;
              teasers?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    linkType?: T;
                    linkInternal?:
                      | T
                      | {
                          openInNewWindow?: T;
                          linkText?: T;
                          internalLink?: T;
                        };
                    linkExternal?:
                      | T
                      | {
                          externalLinkText?: T;
                          externalLink?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        magazineOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        peopleOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsOverviewBlock?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        eventsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        magazineTeasersBlock?:
          | T
          | {
              title?: T;
              lead?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        newsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              project?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
        publicationsTeasersBlock?:
          | T
          | {
              title?: T;
              linkText?: T;
              message?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  department?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  department?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "svgs_select".
 */
export interface SvgsSelect<T extends boolean = true> {
  department?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networkCategories_select".
 */
export interface NetworkCategoriesSelect<T extends boolean = true> {
  department?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  department?: T;
  title?: T;
  project?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zenodoDocuments_select".
 */
export interface ZenodoDocumentsSelect<T extends boolean = true> {
  department?: T;
  zenodoId?: T;
  title?: T;
  publicationDate?: T;
  files?:
    | T
    | {
        link?: T;
        format?: T;
        size?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  department?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people_select".
 */
export interface PeopleSelect<T extends boolean = true> {
  department?: T;
  'person-department'?: T;
  memberType?: T;
  prefix?: T;
  firstname?: T;
  middleName?: T;
  lastname?: T;
  function?: T;
  mail?: T;
  phone?: T;
  image?: T;
  fullName?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTopics_select".
 */
export interface PublicationTopicsSelect<T extends boolean = true> {
  department?: T;
  publicationTopic?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTypes_select".
 */
export interface PublicationTypesSelect<T extends boolean = true> {
  department?: T;
  publicationType?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventCategory_select".
 */
export interface EventCategorySelect<T extends boolean = true> {
  department?: T;
  eventCategory?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "departments_select".
 */
export interface DepartmentsSelect<T extends boolean = true> {
  name?: T;
  domain?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  department?: T;
  roles?: T;
  username?: T;
  departments?:
    | T
    | {
        department?: T;
        roles?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "i18nForms_select".
 */
export interface I18NFormsSelect<T extends boolean = true> {
  department?: T;
  inputFields?:
    | T
    | {
        email?:
          | T
          | {
              label?: T;
              placeholder?: T;
              error?: T;
            };
        message?:
          | T
          | {
              label?: T;
              placeholder?: T;
              error?: T;
            };
        name?:
          | T
          | {
              label?: T;
              placeholder?: T;
              error?: T;
            };
      };
  checkboxes?:
    | T
    | {
        dataPrivacyCheckboxText?: T;
      };
  submitSuccess?:
    | T
    | {
        title?: T;
        text?: T;
        optionalLink?:
          | T
          | {
              includeLink?: T;
              link?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
            };
      };
  submitError?:
    | T
    | {
        title?: T;
        text?: T;
        optionalLink?:
          | T
          | {
              includeLink?: T;
              link?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
            };
      };
  submitWarn?:
    | T
    | {
        title?: T;
        text?: T;
        optionalLink?:
          | T
          | {
              includeLink?: T;
              link?:
                | T
                | {
                    openInNewWindow?: T;
                    linkText?: T;
                    internalLink?: T;
                  };
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "i18nGlobals_select".
 */
export interface I18NGlobalsSelect<T extends boolean = true> {
  department?: T;
  sectionTitles?:
    | T
    | {
        download?: T;
        links?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "consent_select".
 */
export interface ConsentSelect<T extends boolean = true> {
  department?: T;
  adminTitle?: T;
  banner?:
    | T
    | {
        title?: T;
        text?: T;
        buttonAcceptAll?: T;
        buttonCustomizeSelection?: T;
        buttonDeclineAll?: T;
      };
  overlay?:
    | T
    | {
        title?: T;
        text?: T;
        buttonAcceptAll?: T;
        buttonAcceptSelection?: T;
        necessaryCookies?:
          | T
          | {
              title?: T;
              text?: T;
              toggleLabel?: T;
            };
        analyticsPerformance?:
          | T
          | {
              title?: T;
              text?: T;
              toggleLabelOff?: T;
              toggleLabelOn?: T;
              toggleDefault?: T;
            };
        externalContent?:
          | T
          | {
              title?: T;
              text?: T;
              toggleLabelOff?: T;
              toggleLabelOn?: T;
              toggleDefault?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  department?: T;
  adminTitle?: T;
  legal?: T;
  impressum?: T;
  copyright?: T;
  contact?:
    | T
    | {
        title?: T;
        address1?: T;
        address2?: T;
        poBox?: T;
        countryCode?: T;
        zipCode?: T;
        city?: T;
        phone?: T;
        mail?: T;
      };
  socialLinks?:
    | T
    | {
        externalLinkText?: T;
        externalLink?: T;
        icon?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  department?: T;
  adminTitle?: T;
  navItems?:
    | T
    | {
        navItemText?: T;
        navItemLink?: T;
        navItems?:
          | T
          | {
              navItemText?: T;
              navItemLink?: T;
              id?: T;
            };
        id?: T;
      };
  metaLinks?:
    | T
    | {
        linkType?: T;
        linkInternal?:
          | T
          | {
              openInNewWindow?: T;
              linkText?: T;
              internalLink?: T;
            };
        linkExternal?:
          | T
          | {
              externalLinkText?: T;
              externalLink?: T;
            };
        id?: T;
      };
  logo?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statusMessage_select".
 */
export interface StatusMessageSelect<T extends boolean = true> {
  department?: T;
  adminTitle?: T;
  show?:
    | T
    | {
        display?: T;
        from?: T;
        to?: T;
      };
  title?: T;
  message?: T;
  optionalLink?:
    | T
    | {
        includeLink?: T;
        link?:
          | T
          | {
              openInNewWindow?: T;
              linkText?: T;
              internalLink?: T;
            };
      };
  showOnHomeOnly?: T;
  type?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              placeholder?: T;
              fieldError?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              placeholder?: T;
              fieldError?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              placeholder?: T;
              fieldError?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              placeholder?: T;
              fieldError?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  recipientEMail?: T;
  successMessage?: T;
  errorMessage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
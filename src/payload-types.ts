/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    images: Image;
    networkCategories: NetworkCategory;
    faqItems: FaqItem;
    documents: Document;
    projects: Project;
    people: Person;
    instituteDetail: InstituteDetail;
    magazineDetail: MagazineDetail;
    videos: Video;
    publicationDetail: PublicationDetail;
    publicationTopics: PublicationTopic;
    publicationTypes: PublicationType;
    events: Event;
    eventCategory: EventCategory;
    newsDetail: NewsDetail;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    networkCategories: NetworkCategoriesSelect<false> | NetworkCategoriesSelect<true>;
    faqItems: FaqItemsSelect<false> | FaqItemsSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    people: PeopleSelect<false> | PeopleSelect<true>;
    instituteDetail: InstituteDetailSelect<false> | InstituteDetailSelect<true>;
    magazineDetail: MagazineDetailSelect<false> | MagazineDetailSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    publicationDetail: PublicationDetailSelect<false> | PublicationDetailSelect<true>;
    publicationTopics: PublicationTopicsSelect<false> | PublicationTopicsSelect<true>;
    publicationTypes: PublicationTypesSelect<false> | PublicationTypesSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    eventCategory: EventCategorySelect<false> | EventCategorySelect<true>;
    newsDetail: NewsDetailSelect<false> | NewsDetailSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    home: Home;
    network: Network;
    promotion: Promotion;
    institutes: Institute;
    earlyCareerAward: EarlyCareerAward;
    activities: Activity;
    magazineOverview: MagazineOverview;
    publicationsOverview: PublicationsOverview;
    eventsOverview: EventsOverview;
    newsOverview: NewsOverview;
    aboutContact: AboutContact;
    aboutSagw: AboutSagw;
    aboutTeam: AboutTeam;
    errorPage: ErrorPage;
  };
  globalsSelect: {
    home: HomeSelect<false> | HomeSelect<true>;
    network: NetworkSelect<false> | NetworkSelect<true>;
    promotion: PromotionSelect<false> | PromotionSelect<true>;
    institutes: InstitutesSelect<false> | InstitutesSelect<true>;
    earlyCareerAward: EarlyCareerAwardSelect<false> | EarlyCareerAwardSelect<true>;
    activities: ActivitiesSelect<false> | ActivitiesSelect<true>;
    magazineOverview: MagazineOverviewSelect<false> | MagazineOverviewSelect<true>;
    publicationsOverview: PublicationsOverviewSelect<false> | PublicationsOverviewSelect<true>;
    eventsOverview: EventsOverviewSelect<false> | EventsOverviewSelect<true>;
    newsOverview: NewsOverviewSelect<false> | NewsOverviewSelect<true>;
    aboutContact: AboutContactSelect<false> | AboutContactSelect<true>;
    aboutSagw: AboutSagwSelect<false> | AboutSagwSelect<true>;
    aboutTeam: AboutTeamSelect<false> | AboutTeamSelect<true>;
    errorPage: ErrorPageSelect<false> | ErrorPageSelect<true>;
  };
  locale: 'de' | 'fr' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networkCategories".
 */
export interface NetworkCategory {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqItems".
 */
export interface FaqItem {
  id: string;
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  title: string;
  project?: (string | null) | Project;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people".
 */
export interface Person {
  id: string;
  department: 'admin' | 'science' | 'com';
  prefix?: string | null;
  firstname: string;
  middleName?: string | null;
  lastname: string;
  function: string;
  mail: string;
  phone: string;
  image: string | Image;
  memberType: 'executiveBoard' | 'direction' | 'team';
  fullName?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instituteDetail".
 */
export interface InstituteDetail {
  id: string;
  title?: string | null;
  hero: {
    title: string;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  instituteDetails: {
    title: string;
    text: string;
    logo: string | Image;
    linkType: 'internal' | 'external';
    linkInternal?: {
      linkText: string;
      internalLink?: string | null;
      openInNewWindow?: boolean | null;
    };
    linkExternal?: {
      linkText: string;
      href: string;
      openInNewWindow?: boolean | null;
    };
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineDetail".
 */
export interface MagazineDetail {
  id: string;
  title?: string | null;
  overviewPageProps: {
    teaserText: string;
  };
  hero: {
    title: string;
    lead: string;
    author: string;
    date: string;
  };
  contentBlocks?:
    | (
        | {
            title?: string | null;
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            showCopyTextButton?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
      )[]
    | null;
  downloads: {
    downloads: (string | Document)[];
  };
  links?:
    | {
        linkText: string;
        href: string;
        openInNewWindow?: boolean | null;
        description: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'linkExternal';
      }[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationDetail".
 */
export interface PublicationDetail {
  id: string;
  title?: string | null;
  overviewPageProps: {
    image: string | Image;
  };
  categorization: {
    topic: string | PublicationTopic;
    type: string | PublicationType;
  };
  hero: {
    title: string;
  };
  contentBlocks?:
    | {
        title?: string | null;
        text: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        showCopyTextButton?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textBlock';
      }[]
    | null;
  downloads?: {
    downloads?: (string | Document)[] | null;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTopics".
 */
export interface PublicationTopic {
  id: string;
  publicationTopic: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTypes".
 */
export interface PublicationType {
  id: string;
  publicationType: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: string;
  title: string;
  text: string;
  category?: (string | null) | EventCategory;
  project?: (string | null) | Project;
  date: string;
  linkText: string;
  href: string;
  openInNewWindow?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventCategory".
 */
export interface EventCategory {
  id: string;
  eventCategory: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsDetail".
 */
export interface NewsDetail {
  id: string;
  title?: string | null;
  overviewPageProps: {
    teaserText: string;
  };
  hero: {
    title: string;
    date: string;
  };
  contentBlocks?:
    | (
        | {
            title?: string | null;
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            showCopyTextButton?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
      )[]
    | null;
  downloads?: {
    downloads?: (string | Document)[] | null;
  };
  links?:
    | {
        linkText: string;
        href: string;
        openInNewWindow?: boolean | null;
        description: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'linkExternal';
      }[]
    | null;
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'images';
        value: string | Image;
      } | null)
    | ({
        relationTo: 'networkCategories';
        value: string | NetworkCategory;
      } | null)
    | ({
        relationTo: 'faqItems';
        value: string | FaqItem;
      } | null)
    | ({
        relationTo: 'documents';
        value: string | Document;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null)
    | ({
        relationTo: 'people';
        value: string | Person;
      } | null)
    | ({
        relationTo: 'instituteDetail';
        value: string | InstituteDetail;
      } | null)
    | ({
        relationTo: 'magazineDetail';
        value: string | MagazineDetail;
      } | null)
    | ({
        relationTo: 'videos';
        value: string | Video;
      } | null)
    | ({
        relationTo: 'publicationDetail';
        value: string | PublicationDetail;
      } | null)
    | ({
        relationTo: 'publicationTopics';
        value: string | PublicationTopic;
      } | null)
    | ({
        relationTo: 'publicationTypes';
        value: string | PublicationType;
      } | null)
    | ({
        relationTo: 'events';
        value: string | Event;
      } | null)
    | ({
        relationTo: 'eventCategory';
        value: string | EventCategory;
      } | null)
    | ({
        relationTo: 'newsDetail';
        value: string | NewsDetail;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networkCategories_select".
 */
export interface NetworkCategoriesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqItems_select".
 */
export interface FaqItemsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  title?: T;
  project?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "people_select".
 */
export interface PeopleSelect<T extends boolean = true> {
  department?: T;
  prefix?: T;
  firstname?: T;
  middleName?: T;
  lastname?: T;
  function?: T;
  mail?: T;
  phone?: T;
  image?: T;
  memberType?: T;
  fullName?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instituteDetail_select".
 */
export interface InstituteDetailSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        title?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  instituteDetails?:
    | T
    | {
        title?: T;
        text?: T;
        logo?: T;
        linkType?: T;
        linkInternal?:
          | T
          | {
              linkText?: T;
              internalLink?: T;
              openInNewWindow?: T;
            };
        linkExternal?:
          | T
          | {
              linkText?: T;
              href?: T;
              openInNewWindow?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineDetail_select".
 */
export interface MagazineDetailSelect<T extends boolean = true> {
  title?: T;
  overviewPageProps?:
    | T
    | {
        teaserText?: T;
      };
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
        author?: T;
        date?: T;
      };
  contentBlocks?:
    | T
    | {
        textBlock?:
          | T
          | {
              title?: T;
              text?: T;
              showCopyTextButton?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
      };
  downloads?:
    | T
    | {
        downloads?: T;
      };
  links?:
    | T
    | {
        linkExternal?:
          | T
          | {
              linkText?: T;
              href?: T;
              openInNewWindow?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationDetail_select".
 */
export interface PublicationDetailSelect<T extends boolean = true> {
  title?: T;
  overviewPageProps?:
    | T
    | {
        image?: T;
      };
  categorization?:
    | T
    | {
        topic?: T;
        type?: T;
      };
  hero?:
    | T
    | {
        title?: T;
      };
  contentBlocks?:
    | T
    | {
        textBlock?:
          | T
          | {
              title?: T;
              text?: T;
              showCopyTextButton?: T;
              id?: T;
              blockName?: T;
            };
      };
  downloads?:
    | T
    | {
        downloads?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTopics_select".
 */
export interface PublicationTopicsSelect<T extends boolean = true> {
  publicationTopic?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationTypes_select".
 */
export interface PublicationTypesSelect<T extends boolean = true> {
  publicationType?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  category?: T;
  project?: T;
  date?: T;
  linkText?: T;
  href?: T;
  openInNewWindow?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventCategory_select".
 */
export interface EventCategorySelect<T extends boolean = true> {
  eventCategory?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsDetail_select".
 */
export interface NewsDetailSelect<T extends boolean = true> {
  title?: T;
  overviewPageProps?:
    | T
    | {
        teaserText?: T;
      };
  hero?:
    | T
    | {
        title?: T;
        date?: T;
      };
  contentBlocks?:
    | T
    | {
        textBlock?:
          | T
          | {
              title?: T;
              text?: T;
              showCopyTextButton?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
      };
  downloads?:
    | T
    | {
        downloads?: T;
      };
  links?:
    | T
    | {
        linkExternal?:
          | T
          | {
              linkText?: T;
              href?: T;
              openInNewWindow?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: string;
  title: string;
  text: string;
  sideTitle: string;
  lead?: string | null;
  optionalLink?: {
    includeLink?: boolean | null;
    link?: {
      linkText: string;
      internalLink?: string | null;
      openInNewWindow?: boolean | null;
    };
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "network".
 */
export interface Network {
  id: string;
  hero: {
    title: string;
  };
  filter: {
    allCheckboxText: string;
    title: string;
  };
  items: {
    foundingYearText: string;
    linkText: string;
    items: {
      title: string;
      category: string | NetworkCategory;
      foundingYear: number;
      image: string | Image;
      link: string;
      id?: string | null;
      blockName?: string | null;
      blockType: 'networkBlock';
    }[];
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promotion".
 */
export interface Promotion {
  id: string;
  hero: {
    title: string;
    lead: string;
  };
  subpageSections: {
    title: string;
    lead: string;
    alignement?: ('vertical' | 'horizontal') | null;
    blocks: {
      title: string;
      text: string;
      linkType: 'internal' | 'external';
      linkInternal?: {
        linkText: string;
        internalLink?: string | null;
        openInNewWindow?: boolean | null;
      };
      linkExternal?: {
        linkText: string;
        href: string;
        openInNewWindow?: boolean | null;
      };
      id?: string | null;
      blockName?: string | null;
      blockType: 'subpageSectionBlock';
    }[];
    id?: string | null;
    blockName?: string | null;
    blockType: 'subpageSection';
  }[];
  faq: {
    faq: (string | FaqItem)[];
  };
  contact: {
    buttonText: string;
    text: string;
    title: string;
    formResponse: {
      optionalLink?: {
        includeLink?: boolean | null;
        link?: {
          linkText: string;
          internalLink?: string | null;
          openInNewWindow?: boolean | null;
        };
      };
      colorScheme: 'bright' | 'dark';
    };
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "institutes".
 */
export interface Institute {
  id: string;
  hero: {
    title: string;
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
  };
  teasers: {
    teaserLinkText: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "earlyCareerAward".
 */
export interface EarlyCareerAward {
  id: string;
  hero: {
    title: string;
  };
  textBlocksBefore: {
    title?: string | null;
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    showCopyTextButton?: boolean | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'textBlock';
  }[];
  winnersTeasers: {
    buttonText: string;
  };
  textBlocksAfter: {
    title?: string | null;
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    showCopyTextButton?: boolean | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'textBlock';
  }[];
  downloads: {
    title: string;
    downloads: (string | Document)[];
  };
  cta: {
    title: string;
    text: string;
    buttonText: string;
  };
  faq: {
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
    faq: (string | FaqItem)[];
  };
  contact: {
    colorMode: 'white' | 'color';
    colorScheme?: ('bright' | 'dark') | null;
    contactPerson: string | Person;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities".
 */
export interface Activity {
  id: string;
  hero: {
    title: string;
  };
  subpageSections: {
    title: string;
    lead: string;
    alignement?: ('vertical' | 'horizontal') | null;
    blocks: {
      title: string;
      text: string;
      linkType: 'internal' | 'external';
      linkInternal?: {
        linkText: string;
        internalLink?: string | null;
        openInNewWindow?: boolean | null;
      };
      linkExternal?: {
        linkText: string;
        href: string;
        openInNewWindow?: boolean | null;
      };
      id?: string | null;
      blockName?: string | null;
      blockType: 'subpageSectionBlock';
    }[];
    id?: string | null;
    blockName?: string | null;
    blockType: 'subpageSection';
  }[];
  magazine: {
    title: string;
    lead: string;
    linkText: string;
  };
  publications: {
    title: string;
    lead: string;
    linkText: string;
  };
  events: {
    title: string;
    linkText: string;
  };
  news: {
    title: string;
    linkText: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineOverview".
 */
export interface MagazineOverview {
  id: string;
  hero: {
    title: string;
  };
  magazineDetailPageProps: {
    heroExportButtonText: string;
    linksTitle: string;
    subscribeButtonText: string;
    downloadsTitle: string;
    downloadsText: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationsOverview".
 */
export interface PublicationsOverview {
  id: string;
  hero: {
    title: string;
  };
  filters: {
    allCheckboxTopics: string;
    allCheckboxTypes: string;
    title: string;
  };
  publicationDetail: {
    downloadsTitle: string;
    otherPublicationsTitle: string;
    otherPublicationsAllButton: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventsOverview".
 */
export interface EventsOverview {
  id: string;
  hero: {
    title: string;
  };
  events: {
    sectionTitle: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsOverview".
 */
export interface NewsOverview {
  id: string;
  hero: {
    title: string;
  };
  detailPageProps: {
    downloadsTitle: string;
    linksTitle: string;
    otherNewsTitle: string;
  };
  content: {
    sectionTitle: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutContact".
 */
export interface AboutContact {
  id: string;
  hero: {
    title: string;
  };
  addresses: {
    title: string;
    contacts?:
      | {
          title: string;
          category: (string | Person)[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'contactAccordionItem';
        }[]
      | null;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutSagw".
 */
export interface AboutSagw {
  id: string;
  hero: {
    title: string;
    lead: string;
  };
  contentBlocks?:
    | (
        | {
            title?: string | null;
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            showCopyTextButton?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            alignement?: ('left' | 'center' | 'right') | null;
            image: string | Image;
            title: string;
            caption: string;
            credits: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'imageBlock';
          }
        | {
            video: string | Video;
            title: string;
            caption: string;
            credits: string;
            stillImage: string | Image;
            id?: string | null;
            blockName?: string | null;
            blockType: 'videoBlock';
          }
      )[]
    | null;
  linksGroup: {
    linksTitle: string;
    link?:
      | {
          linkText: string;
          href: string;
          openInNewWindow?: boolean | null;
          description: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'linkExternal';
        }[]
      | null;
  };
  downloadsGroup: {
    downloadsTitle: string;
    downloads: (string | Document)[];
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutTeam".
 */
export interface AboutTeam {
  id: string;
  hero: {
    title: string;
    lead: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage".
 */
export interface ErrorPage {
  id: string;
  homeButtonText: string;
  notFound: {
    title: string;
    description: string;
  };
  meta?: {
    seo?: {
      index?: boolean | null;
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Image;
      description?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  sideTitle?: T;
  lead?: T;
  optionalLink?:
    | T
    | {
        includeLink?: T;
        link?:
          | T
          | {
              linkText?: T;
              internalLink?: T;
              openInNewWindow?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "network_select".
 */
export interface NetworkSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  filter?:
    | T
    | {
        allCheckboxText?: T;
        title?: T;
      };
  items?:
    | T
    | {
        foundingYearText?: T;
        linkText?: T;
        items?:
          | T
          | {
              networkBlock?:
                | T
                | {
                    title?: T;
                    category?: T;
                    foundingYear?: T;
                    image?: T;
                    link?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promotion_select".
 */
export interface PromotionSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
      };
  subpageSections?:
    | T
    | {
        subpageSection?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              blocks?:
                | T
                | {
                    subpageSectionBlock?:
                      | T
                      | {
                          title?: T;
                          text?: T;
                          linkType?: T;
                          linkInternal?:
                            | T
                            | {
                                linkText?: T;
                                internalLink?: T;
                                openInNewWindow?: T;
                              };
                          linkExternal?:
                            | T
                            | {
                                linkText?: T;
                                href?: T;
                                openInNewWindow?: T;
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  faq?:
    | T
    | {
        faq?: T;
      };
  contact?:
    | T
    | {
        buttonText?: T;
        text?: T;
        title?: T;
        formResponse?:
          | T
          | {
              optionalLink?:
                | T
                | {
                    includeLink?: T;
                    link?:
                      | T
                      | {
                          linkText?: T;
                          internalLink?: T;
                          openInNewWindow?: T;
                        };
                  };
              colorScheme?: T;
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "institutes_select".
 */
export interface InstitutesSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        colorMode?: T;
        colorScheme?: T;
      };
  teasers?:
    | T
    | {
        teaserLinkText?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "earlyCareerAward_select".
 */
export interface EarlyCareerAwardSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  textBlocksBefore?:
    | T
    | {
        textBlock?:
          | T
          | {
              title?: T;
              text?: T;
              showCopyTextButton?: T;
              id?: T;
              blockName?: T;
            };
      };
  winnersTeasers?:
    | T
    | {
        buttonText?: T;
      };
  textBlocksAfter?:
    | T
    | {
        textBlock?:
          | T
          | {
              title?: T;
              text?: T;
              showCopyTextButton?: T;
              id?: T;
              blockName?: T;
            };
      };
  downloads?:
    | T
    | {
        title?: T;
        downloads?: T;
      };
  cta?:
    | T
    | {
        title?: T;
        text?: T;
        buttonText?: T;
      };
  faq?:
    | T
    | {
        colorMode?: T;
        colorScheme?: T;
        faq?: T;
      };
  contact?:
    | T
    | {
        colorMode?: T;
        colorScheme?: T;
        contactPerson?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities_select".
 */
export interface ActivitiesSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  subpageSections?:
    | T
    | {
        subpageSection?:
          | T
          | {
              title?: T;
              lead?: T;
              alignement?: T;
              blocks?:
                | T
                | {
                    subpageSectionBlock?:
                      | T
                      | {
                          title?: T;
                          text?: T;
                          linkType?: T;
                          linkInternal?:
                            | T
                            | {
                                linkText?: T;
                                internalLink?: T;
                                openInNewWindow?: T;
                              };
                          linkExternal?:
                            | T
                            | {
                                linkText?: T;
                                href?: T;
                                openInNewWindow?: T;
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  magazine?:
    | T
    | {
        title?: T;
        lead?: T;
        linkText?: T;
      };
  publications?:
    | T
    | {
        title?: T;
        lead?: T;
        linkText?: T;
      };
  events?:
    | T
    | {
        title?: T;
        linkText?: T;
      };
  news?:
    | T
    | {
        title?: T;
        linkText?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "magazineOverview_select".
 */
export interface MagazineOverviewSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  magazineDetailPageProps?:
    | T
    | {
        heroExportButtonText?: T;
        linksTitle?: T;
        subscribeButtonText?: T;
        downloadsTitle?: T;
        downloadsText?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationsOverview_select".
 */
export interface PublicationsOverviewSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  filters?:
    | T
    | {
        allCheckboxTopics?: T;
        allCheckboxTypes?: T;
        title?: T;
      };
  publicationDetail?:
    | T
    | {
        downloadsTitle?: T;
        otherPublicationsTitle?: T;
        otherPublicationsAllButton?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventsOverview_select".
 */
export interface EventsOverviewSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  events?:
    | T
    | {
        sectionTitle?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsOverview_select".
 */
export interface NewsOverviewSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  detailPageProps?:
    | T
    | {
        downloadsTitle?: T;
        linksTitle?: T;
        otherNewsTitle?: T;
      };
  content?:
    | T
    | {
        sectionTitle?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutContact_select".
 */
export interface AboutContactSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
      };
  addresses?:
    | T
    | {
        title?: T;
        contacts?:
          | T
          | {
              contactAccordionItem?:
                | T
                | {
                    title?: T;
                    category?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutSagw_select".
 */
export interface AboutSagwSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
      };
  contentBlocks?:
    | T
    | {
        textBlock?:
          | T
          | {
              title?: T;
              text?: T;
              showCopyTextButton?: T;
              id?: T;
              blockName?: T;
            };
        imageBlock?:
          | T
          | {
              alignement?: T;
              image?: T;
              title?: T;
              caption?: T;
              credits?: T;
              id?: T;
              blockName?: T;
            };
        videoBlock?:
          | T
          | {
              video?: T;
              title?: T;
              caption?: T;
              credits?: T;
              stillImage?: T;
              id?: T;
              blockName?: T;
            };
      };
  linksGroup?:
    | T
    | {
        linksTitle?: T;
        link?:
          | T
          | {
              linkExternal?:
                | T
                | {
                    linkText?: T;
                    href?: T;
                    openInNewWindow?: T;
                    description?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
      };
  downloadsGroup?:
    | T
    | {
        downloadsTitle?: T;
        downloads?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutTeam_select".
 */
export interface AboutTeamSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        lead?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage_select".
 */
export interface ErrorPageSelect<T extends boolean = true> {
  homeButtonText?: T;
  notFound?:
    | T
    | {
        title?: T;
        description?: T;
      };
  meta?:
    | T
    | {
        seo?:
          | T
          | {
              index?: T;
              title?: T;
              image?: T;
              description?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
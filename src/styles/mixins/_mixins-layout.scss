@use "../utilities/utilities" as *;
@use "../utilities/functions" as *;
@use "../utilities/mediaqueries" as *;

@mixin block-layout-sticky-title {
  @include mq($to: large) {
    display: flex;
    flex-direction: column;
    row-gap: px-to-rem(var(--section-inside-s));
  }

  @include mq($from: large) {
    --heading-alignment-compensation: 5;

    display: grid;
    grid-template-columns: repeat(12, 1fr);
    column-gap: px-to-rem(var(--grid-gutter));

    > h2:first-child,
    > h3:first-child {
      position: sticky;
      will-change: transform;
      top: px-to-rem(calc(var(--sticky-offset-top) + var(--grid-gutter)));
      bottom: 0;
      align-self: flex-start;
      grid-row: 1 / span 5;
      grid-column: 1 / 4;
    }

    // Vertically center the first line of the
    // headings next to each other
    h3:nth-child(2) {
      margin-block-start: px-to-rem(var(--heading-alignment-compensation));
    }

    > :not(:first-child) {
      grid-column: 5 / 13;
    }
  }

  @include mq($from: ultra) {
    > h2:first-child,
    > h3:first-child {
      grid-column: 1 / 4;
    }
  }
}

@mixin generic-block-padding {
  padding-block-start: px-to-rem(var(--section-top));
  padding-inline: px-to-rem(var(--grid-margin));
  padding-block-end: px-to-rem(var(--section-bottom));
}

@mixin text-block-padding {
  padding-block-start: px-to-rem(var(--text-block-top));
  padding-inline: px-to-rem(var(--grid-margin));
  padding-block-end: px-to-rem(var(--text-block-bottom));
}

@mixin generic-block-top-line {
  grid-column: 1 / 13;
  background-color: var(--border-primary);
  height: px-to-rem(var(--border-width-l));

  @include mq($to: large) {
    position: absolute;
    inset-block-start: 0;
    inset-inline: px-to-rem(var(--grid-margin));
  }

  @include mq($from: large) {
    grid-row: 1;
    margin-top: px-to-rem(calc(-1 * var(--section-top)));
  }
}

@use "../../../styles/utilities/functions" as *;
@use "../../../styles/mixins/mixins-typo" as *;
@use "../../../styles/utilities/mediaqueries" as *;
@use "../../../styles/utilities/utilities" as *;
@use "../../../styles/mixins/mixins-shared-styles" as *;

.notification.isButton {
  @include button-reset;

  display: block;
  cursor: pointer;

  &:focus-visible {
    @include focus-visible;
  }
}

.notification.notification {
  text-align: left;
  background: var(--color-background);
  width: 100%;
  border: px-to-rem(var(--border-width-s)) solid var(--color-border);
  padding: px-to-rem(var(--grid-margin));

  --icon-dimensions: 36;
  --padding-block-large: 32;

  @include mq($from: large) {
    --padding-block-large: 48;
  }

  @include forced-colors {
    border: px-to-rem(var(--border-width-m)) solid CanvasText;
  }

  &.borderless {
    border: none;
  }

  &.success.dark {
    --color-background: var(--background-cta);
    --color-title: var(--text-primary-inverted);
    --color-text: var(--text-secondary-inverted);
    --color-button: var(--text-primary-inverted);
    --color-icon: var(--text-secondary-inverted);
    --color-border: var(--border-secondary-inverted);
  }

  &.success.white {
    --color-background: var(--background-positive);
    --color-title: var(--text-positive);
    --color-text: var(--text-positive);
    --color-button: var(--text-positive);
    --color-icon: var(--icon-positive);
    --color-border: var(--border-secondary-inverted);
  }

  &.error {
    --color-background: var(--background-negative);
    --color-title: var(--text-error);
    --color-text: var(--text-error);
    --color-button: var(--text-error);
    --color-icon: var(--icon-error);
    --color-border: var(--border-negative);
  }

  &.warn {
    --color-background: var(--background-warning);
    --color-title: var(--text-warning);
    --color-text: var(--text-warning);
    --color-button: var(--text-warning);
    --color-icon: var(--text-warning);
    --color-border: var(--border-negative);
  }

  .icon {
    color: var(--color-icon);
    width: px-to-rem(var(--icon-dimensions));
    height: px-to-rem(var(--icon-dimensions));

    path {
      stroke: none;
      fill: currentcolor;
    }
  }

  .title {
    @include title-heading-4;

    color: var(--color-title);
    margin: 0;
    padding: px-to-rem(var(--inside-elements-m)) 0;
  }

  .text {
    @include body-text-m;

    color: var(--color-text);
    margin: 0;

    p {
      margin-block-start: 0;

      &:only-child {
        margin: 0;
      }
    }

    a {
      @include link-text-underline;
      @include inline-svg;

      display: inline-flex;
      align-items: center;
      color: var(--notification-link-color);

      &:focus,
      &:hover {
        --notification-link-color: var(--interaction-primary-hover);
      }
    }

    ul,
    ol {
      margin-block: 0;
      padding-inline-start: px-to-rem(var(--spacing-l));

      &:not(:last-child) {
        margin-block-end: px-to-rem(var(--inside-elements-m));
      }
    }
  }

  .button {
    @include button-text;

    color: var(--color-button);
    margin: 0;
    padding: px-to-rem(var(--padding-block-large)) 0 0;
  }

  .bottomLink {
    color: var(--color-text);
    margin: 0;
    padding: px-to-rem(var(--padding-block-large)) 0 0;
  }
}

@use "../../../styles/utilities/utilities" as *;
@use "../../../styles/utilities/mediaqueries" as *;
@use "../../../styles/mixins/mixins-typo" as *;
@use "../../../styles/utilities/functions" as *;
@use "../../../styles/utilities/animations" as *;

.expandableElement {
  --items-spacing: 0;

  &:not(.white) {
    @include font-smoothing;
  }

  &.light {
    --background-color: var(--background-light);
    --text-color: var(--text-primary);
    --border-color: var(--border-primary);
    --icon-color: var(--interaction-secondary);

    @include generic-block-top-line;
  }

  &.white {
    --background-color: var(--background-page);
    --text-color: var(--text-primary);
    --border-color: var(--border-primary);
    --icon-color: var(--interaction-secondary);

    @include generic-block-top-line;
  }

  &.dark {
    --background-color: var(--background-cta);
    --text-color: var(--text-primary-inverted);
    --border-color: var(--border-secondary-inverted);
    --icon-color: var(--icon-error-inverted);
  }

  background-color: var(--background-color);

  .list {
    @include list-reset;

    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    gap: px-to-rem(var(--items-spacing));
    margin-block-start: px-to-rem(var(--spacing-xl), true);

    @include mq($from: large) {
      margin-block-start: px-to-rem(calc((var(--spacing-xl) - 6)), true);
    }
  }

  .item {
    border-bottom: px-to-rem(var(--border-width-l)) solid var(--border-color);

    .title {
      margin: 0;

      .button {
        @include button-reset;
        @include title-heading-4;

        cursor: pointer;
        color: var(--text-color);
        display: flex;
        flex-wrap: nowrap;
        align-items: center;
        justify-content: space-between;
        gap: px-to-rem(var(--spacing-m));
        width: 100%;
        padding: px-to-rem(var(--spacing-xl)) 0;
        margin-bottom: px-to-rem(calc(-1 * var(--border-width-l)));
        text-align: left;

        .buttonText {
          text-decoration-line: underline;
          text-underline-offset: px-to-rem(var(--spacing-2xs));
          text-decoration-thickness: px-to-rem(var(--border-width-l));
          text-decoration-color: transparent;
          transition: text-decoration-color var(--motion-speed-very-fast) var(--motion-ease-in-out);

          @include reduced-motion {
            transition: none;
          }
        }

        .icon {
          flex-basis: px-to-rem(var(--spacing-l));
          height: px-to-rem(var(--spacing-l));
          flex-shrink: 0;
          flex-grow: 0;
          color: var(--icon-color);
          transition: transform var(--motion-speed-very-fast) var(--motion-ease-in-out);
        }

        @include hover-style {
          &:not(:focus-visible) .buttonText {
            text-decoration-color: var(--border-color);
          }
        }

        &:focus-visible {
          @include focus-visible;

          border-bottom: none;

          // TODO: discuss focus style in general
          outline-offset: px-to-rem(calc(-1 * var(--border-width-l) + var(--spacing-xs)));
        }
      }
    }

    .content {
      @include expandable-wrapper;

      color: var(--text-color);
      transition-property: grid-template-rows, opacity, padding-block-end, margin-block-start;
      margin-block-start: 0;
      padding-block-end: 0;
    }

    .rte {
      @include expandable-content;

      a {
        color: inherit;
      }
    }

    &.active {
      .content {
        @include expandable-wrapper-visible;

        margin-block-start: px-to-rem(var(--spacing-s));
        padding-block-end: px-to-rem(calc(var(--spacing-2xl) + var(--spacing-xl)));
      }

      .icon {
        transform: rotate3d(0, 0, 1, 45deg);
      }
    }
  }
}
